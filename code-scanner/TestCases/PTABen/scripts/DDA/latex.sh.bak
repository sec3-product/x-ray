# Collect DDA data and make them into latex tables.
# Author: Sen Ye (senye1985@gmail.com)
#
# $1    directory containing results
# $2    client used
# $3    file containing names of spec whose data will be collected
# $4    file containing section and field information about which data to be collected from the data file
#
# 1. Example of data file
#
# ****Andersen Pointer Analysis Statistics****       <-- section name
# ################ (program : )###############
# IndCallSites        2                              <-- field data we need
# ReturnsNum          3
# CallsNum            113
#
# ****Demand-Driven Pointer Analysis Statistics****  <-- section name
# ################ (program : )###############
# -------------------------------------------------------
# IndEdgeSolved       2                              <-- field data we need
# NumOfNullPtr        0
# NumOfInfePath       0
#
# 
# 2. Format of config file: each line has two componenets: section name and field names. Section and filed are separated by colon and fields are separated by commas.
#
#    Example:
#        Demand-Driven Pointer:IndEdgeSolved
#        Andersen:IndCallSites

if [ $# -ne 4 ]
then
	echo "Expecting four arguments!";
	echo "Usage: ./latex.sh DIR CLIENT CONFIG_FILE";
	echo "    DIR         directory containing bitcode files";
	echo "    CLIENT      client used (funptr, cast, free)";
	echo "    SPEC_FILE   file containing names of spec whose data will be collected";
	echo "    CONFIG      config file about the data to be collected (see example in this script)";
	exit;
fi


DIR=$1
CLIENT=$2
SPEC_NAMES=$3
CONFIG_FILE=$4

BASH_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SCRIPT=$BASH_DIR/find_data.pl
OUTPUT=$DIR/$CLIENT.tex


ANALYSIS="dfs\
		  cxt\
		  dps"

BUDGET="10\
		20\
		40\
		80\
		100\
		200\
		400\
		800\
		1000\
		2000\
		4000\
		8000\
		10000\
		20000\
		40000\
		80000\
		100000\
		200000\
		400000\
		800000"


if [ -f $OUTPUT ];
then
	rm $OUTPUT;
fi


# output the table environment
echo "\\begin{table*}[t]" >> $OUTPUT;
echo "\\centering" >> $OUTPUT;
table_title="\\begin{tabular}{cc|";
column=2;
for b in $BUDGET;
do
	column=$((column+1));
	table_title+="c|";
done
table_title+="}";
echo $table_title >> $OUTPUT;
echo "\\cline{3-$column}" >> $OUTPUT;
echo "" >> $OUTPUT;


# output the first line
budget_title="& ";
for b in $BUDGET;
do
	budget_title+="& $b ";
done
budget_title+="\\\\ \\hline"
echo $budget_title >> $OUTPUT;

echo "" >> $OUTPUT;

# output data
for i in `cat $SPEC_NAMES`;
do
	spec=`basename $i`;

	data="\\multicolumn{1}{|c}{\\parbox[t]{2mm}{\\multirow{3}{*}{\\rotatebox[origin=c]{90}{$spec}}}}";

	# output ander analysis results
	data+=" & \\multicolumn{1}{|c|}{ander}";
	for budget in $BUDGET;
	do
		for file in `find ./ -name "$CLIENT.ander" | sort`;
		do
			data+=" & ";
			data+=`$SCRIPT $file $spec $CONFIG_FILE`;
		done
	done
	data+="\\\\ \\cline{2-$column}";
	echo $data >> $OUTPUT;

	first_line=0;

	# output cxt and dps analysis results
	for pa in $ANALYSIS;
	do
		data="\\multicolumn{1}{|c}{} & \\multicolumn{1}{|c|}{$pa}";
		
		for budget in $BUDGET;
		do
			for file in `find ./ -name "$CLIENT.$pa.$budget" | sort`;
			do
				data+=" & ";
				data+=`$SCRIPT $file $spec $CONFIG_FILE`;
			done
		done

		if [ "$first_line" -eq 1 ];then
			data+="\\\\ \\hline";
		else
			data+="\\\\ \\cline{2-$column}";
		fi
		echo $data >> $OUTPUT;
	
		first_line=$((first_line+1));

	done

	echo "" >> $OUTPUT;
done

# output table environment
echo "\\end{tabular}" >> $OUTPUT
echo "\\end{table*}" >> $OUTPUT

