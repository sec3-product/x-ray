# Use prebuilt LLVM binaries. Note that not using the package from LLVM release
# as x-ray (in particular `code-parser`) requires RTTI support which is not
# enabled in LLVM release build.
ARG LLVM_PREBUILT_IMAGE=llvm-prebuilt
FROM ${LLVM_PREBUILT_IMAGE} AS llvm-prebuilt

# Builder.
FROM ubuntu:22.04 AS builder
COPY --from=llvm-prebuilt /usr/local/llvm /usr/local/llvm
ARG LLVM_PREBUILT_PATH=/usr/local/llvm
ENV PATH=/usr/local/llvm/bin:${PATH}

# Assert that LLVM binaries are available.
RUN clang --version
RUN llvm-config --version

ENV DEBIAN_FRONTEND=noninteractive

# Build tools and dependencies.
# Go: Pick up the latest stable Go releases via
# https://go.dev/wiki/Ubuntu#using-ppa.
# Pinning to Go-1.22 due to https://github.com/golang/go/issues/68976.
RUN apt-get update \
    && apt-get install -y curl software-properties-common \
    && add-apt-repository ppa:longsleep/golang-backports \
    && apt-get update \
    && apt-get install -y \
        build-essential \
        golang-1.22-go \
        wget \
        git \
        zlib1g-dev

# Pin cmake to < 4.0 to avoid "Compatibility with CMake < 3.5 has been removed from CMake".
RUN curl -LO https://github.com/Kitware/CMake/releases/download/v3.31.7/cmake-3.31.7-linux-x86_64.sh && \
    sh cmake-3.31.7-linux-x86_64.sh --prefix=/usr/local --skip-license

ENV PATH=/usr/lib/go-1.22/bin:/usr/local/bin:$PATH

WORKDIR /x-ray-toolchain
ARG VERSION=unknown
# Caller can optionally specify # of threads.
ARG MAKE_THREADS=
COPY Makefile .
COPY common common

# Build x-ray analyzer.
COPY code-analyzer code-analyzer
RUN make -j build-analyzer

# Build x-ray parser.
COPY code-parser code-parser
RUN make -j build-parser

# Build x-ray CLI. Note that it avoids putting `COPY . .` too early to avoid
# invalidating the cache for building `code-analyzer` and `code-parser`.
COPY . .
RUN make -j build-cli

# Install the built artifacts.
RUN make -j install


FROM ubuntu:22.04
COPY --from=builder /x-ray-toolchain/build/dist /usr/local/sec3
# `libomp.so` is wanted by `sol-code-analyzer` (via LD_PRELOAD).
COPY --from=builder /usr/local/llvm/lib/libomp.so /usr/local/sec3/bin/libomp.so

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get install -y \
        libgomp1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace
ENV PATH=/usr/local/sec3/bin:$PATH
ENTRYPOINT ["xray"]
