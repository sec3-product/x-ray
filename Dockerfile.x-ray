FROM llvm-prebuilt

# ARG CODERRECT_LOCAL_PATH=coderrect-linux-develop.tar.gz
# ARG CODERRECT_LOCAL_FILENAME=coderrect-linux-develop

# # install coderrect
# ADD ${CODERRECT_LOCAL_PATH} /opt
# ENV PATH="/opt/${CODERRECT_LOCAL_FILENAME}/bin:${PATH}"

# # for LLVM 12.0.1 image
# RUN apt-get update && apt-get install -y \
#     gnupg \
#     software-properties-common \
#     build-essential \
#     python3 \
#     python3-pip \
#     ninja-build \
#     zlib1g-dev \
#     libtinfo-dev \
#     libncurses5-dev

# # pre-compiled LLVM 12.0.1 (with MLIR)
# RUN wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \
#     tar -xf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \
#     mv clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu- /usr/local/llvm-12 && \
#     ln -s /usr/local/llvm-12/bin/llvm-config /usr/bin/llvm-config-12 && \
#     ln -s /usr/local/llvm-12/bin/clang /usr/bin/clang-12 && \
#     ln -s /usr/local/llvm-12/bin/clang++ /usr/bin/clang++-12 && \
#     ln -s /usr/local/llvm-12/bin/mlir* /usr/bin/

# # Verify the installations: LLVM
# RUN clang-12 --version
# RUN llvm-config-12 --version

ARG MAKE_THREADS=32

# build x-ray detector
COPY . x-ray-toolchain
RUN mkdir -p x-ray-toolchain/code-detector/build \
    && cd x-ray-toolchain/code-detector/build \
    && cmake .. \
    && make -j${MAKE_THREADS}

# Set the working directory
WORKDIR /workspace

# Default command to start an interactive shell
CMD ["/bin/bash"]

