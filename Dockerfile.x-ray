# Use prebuilt LLVM binaries. Note that not using the package from LLVM release
# as x-ray (in particular `code-parser`) requires RTTI support which is not
# enabled in LLVM release build.
ARG LLVM_PREBUILT_IMAGE=llvm-prebuilt
ARG LLVM_VERSION=14.0.6

FROM ${LLVM_PREBUILT_IMAGE} AS llvm-prebuilt

# Builder.
FROM ubuntu:22.04 AS builder
COPY --from=llvm-prebuilt /usr/local/llvm /usr/local/llvm
ENV PATH=/usr/local/llvm/bin:${PATH}

# Assert that LLVM binaries are available.
RUN clang --version
RUN llvm-config --version

ENV DEBIAN_FRONTEND=noninteractive

# Build tools and dependencies.
# Go: Pick up the latest stable (1.22 as of July 2024) via
# https://go.dev/wiki/Ubuntu#using-ppa.
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:longsleep/golang-backports \
    && apt-get update \
    && apt-get install -y \
        build-essential \
        golang-go \
        wget \
        git \
        libxml2-dev \
        zlib1g-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Use prebuilt CMake binary release.
ARG CMAKE_VERSION=3.30.1
RUN wget --quiet https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-x86_64.sh \
    && mkdir /opt/cmake \
    && sh cmake-${CMAKE_VERSION}-linux-x86_64.sh --prefix=/opt/cmake --skip-license \
    && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake \
    && rm cmake-${CMAKE_VERSION}-linux-x86_64.sh

# Caller can optionally specify # of threads.
ARG MAKE_THREADS=

# Build x-ray detector.
COPY code-detector x-ray-toolchain/code-detector
RUN mkdir -p x-ray-toolchain/code-detector/build \
    && cd x-ray-toolchain/code-detector/build \
    && cmake \
        -DCMAKE_C_COMPILER=/usr/local/llvm/bin/clang \
        -DCMAKE_CXX_COMPILER=/usr/local/llvm/bin/clang++ \
        -DLLVM_VERSION=${LLVM_VERSION} \
        .. \
    && make -j${MAKE_THREADS}

# Build x-ray parser.
COPY code-parser x-ray-toolchain/code-parser
RUN mkdir -p x-ray-toolchain/code-parser/build \
    && cd x-ray-toolchain/code-parser/build \
    && cmake \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_C_COMPILER=/usr/local/llvm/bin/clang \
        -DCMAKE_CXX_COMPILER=/usr/local/llvm/bin/clang++ \
        -DLLVM_VERSION=${LLVM_VERSION} \
        .. \
    && make -j${MAKE_THREADS}

# Build coderrect.
COPY coderrect x-ray-toolchain/coderrect
RUN cd x-ray-toolchain/coderrect/gosrc \
    && make -j${MAKE_THREADS} all \
    && tools/update-bin.sh


FROM ubuntu:22.04
COPY --from=builder /usr/local/sec3 /usr/local/sec3
# `libomp.so` is wanted by `racedetector` (via LD_PRELOAD).
COPY --from=builder /usr/local/llvm/lib/libomp.so /usr/local/sec3/bin/libomp.so

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get install -y \
        libgomp1 \
        libxml2-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace
ENV PATH=/usr/local/sec3/bin:$PATH
ENTRYPOINT ["coderrect"]
