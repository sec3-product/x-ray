# Use prebuilt LLVM binaries. Note that not using the package from LLVM release
# as x-ray (in particular `code-parser`) requires RTTI support which is not
# enabled in LLVM release build.
ARG LLVM_PREBUILT_IMAGE=llvm-prebuilt
FROM ${LLVM_PREBUILT_IMAGE} AS llvm-prebuilt

# Builder.
FROM ubuntu:22.04 AS builder
COPY --from=llvm-prebuilt /usr/local/llvm /usr/local/llvm
ARG LLVM_PREBUILT_PATH=/usr/local/llvm
ENV PATH=/usr/local/llvm/bin:${PATH}

# Assert that LLVM binaries are available.
RUN clang --version
RUN llvm-config --version

ENV DEBIAN_FRONTEND=noninteractive

# Prepare for installing CMake via APT (ref: https://apt.kitware.com/).
RUN apt-get update && \
    apt-get install -y curl && \
    curl -sSf https://apt.kitware.com/kitware-archive.sh | sh

# Build tools and dependencies.
# Go: Pick up the latest stable (1.22 as of July 2024) via
# https://go.dev/wiki/Ubuntu#using-ppa.
RUN apt-get install -y software-properties-common \
    && add-apt-repository ppa:longsleep/golang-backports \
    && apt-get update \
    && apt-get install -y \
        build-essential \
        cmake \
        golang-go \
        wget \
        git \
        zlib1g-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /x-ray-toolchain
ARG VERSION=unknown
COPY Makefile .
COPY common common

# Build x-ray analyzer.
COPY code-analyzer code-analyzer
RUN make -j build-analyzer

# Build x-ray parser.
COPY code-parser code-parser
RUN make -j build-parser

# Build x-ray CLI. Note that it avoids putting `COPY . .` too early to avoid
# invalidating the cache for building `code-analyzer` and `code-parser`.
COPY . .
RUN make -j build-cli

# Install the built artifacts.
RUN make -j install


FROM ubuntu:22.04
COPY --from=builder /x-ray-toolchain/build/dist /usr/local/sec3
# `libomp.so` is wanted by `sol-code-analyzer` (via LD_PRELOAD).
COPY --from=builder /usr/local/llvm/lib/libomp.so /usr/local/sec3/bin/libomp.so

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
    && apt-get install -y \
        libgomp1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace
ENV PATH=/usr/local/sec3/bin:$PATH
ENTRYPOINT ["xray"]
