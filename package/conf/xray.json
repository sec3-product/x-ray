{
  "logger": {
    "level": "debug",
    "logFolder": "logs",
    "maximumLogFileCount": 8,
    "maximumLogFileSize": 128,
    "toStderr": false
  },
  "report": {
    "enableTerminal": true,
    "//ouputDir": "please remove // and set the right path here"
  },
  "//solPaths": "Remove // and specify a list of comma-separated paths",
  "mode": "normal",
  "raceLimit": 99,
  "solana": {
    "on": true,
    "account": {
      "UncheckedAccount": true
    },
    "sve": {
      "1001": {
        "name": "MissingSignerCheck",
        "description": "The account is missing signer check",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/0-signer-authorization",
        "free": true
      },
      "1002": {
        "name": "MissingOwnerCheck",
        "description": "The account is missing owner check",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/2-owner-checks",
        "free": true
      },
      "1003": {
        "name": "IntegerAddOverflow",
        "description": "The add operation may result in overflows",
        "url": "https://www.sec3.dev/blog/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts",
        "free": true
      },
      "1004": {
        "name": "IntegerUnderflow",
        "description": "The sub operation may result in underflows",
        "url": "https://www.sec3.dev/blog/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts",
        "free": true
      },
      "1005": {
        "name": "IntegerMulOverflow",
        "description": "The mul operation may result in overflows",
        "url": "https://www.sec3.dev/blog/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts",
        "free": true
      },
      "1006": {
        "name": "IntegerDivOverflow",
        "description": "The div operation may result in overflows",
        "url": "https://www.sec3.dev/blog/understanding-arithmetic-overflow-underflows-in-rust-and-solana-smart-contracts",
        "free": true
      },
      "1007": {
        "name": "UnverifiedParsedAccount",
        "description": "The account is not validated before parsing its data",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/1-account-data-matching"
      },
      "1008": {
        "name": "DuplicateMutableAccount",
        "description": "These two accounts are both mutable and may be the same account",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/6-duplicate-mutable-accounts"
      },
      "1009": {
        "name": "InsecureAccountClosing",
        "description": "The account may not be closed securely",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/9-closing-accounts"
      },
      "1010": {
        "name": "TypeFullCosplay",
        "description": "These two account data types are fully compatible and can be used to launch type confusion attacks",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/3-type-cosplay",
        "free": true
      },
      "1011": {
        "name": "TypePartialCosplay",
        "description": "These two account data types are partially compatible and may be exploited by type confusion attacks",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/3-type-cosplay"
      },
      "1012": {
        "name": "DivideByZero",
        "description": "The arithmetic operation may result in a divide-by-zero error",
        "url": "https://github.com/rust-lang/rust/issues/944",
        "free": true
      },
      "1013": {
        "name": "AccountReInitialization",
        "description": "The account may be vulnerable to program re-initialization",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/4-initialization"
      },
      "1014": {
        "name": "BumpSeedNotValidated",
        "description": "The account's bump seed is not validated and may be vulnerable to seed canonicalization attacks",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/7-bump-seed-canonicalization",
        "free": false
      },
      "1015": {
        "name": "InsecurePDASharing",
        "description": "The PDA sharing with these seeds may be insecure",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/8-pda-sharing"
      },
      "1016": {
        "name": "ArbitraryCPI",
        "description": "The CPI may be vulnerable and invoke an arbitrary program",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/5-arbitrary-cpi",
        "free": true
      },
      "1017": {
        "name": "MaliciousSimulation",
        "description": "The program may contain malicious simulation",
        "url": "https://opcodes.fr/en/publications/2022-01/detecting-transaction-simulation/"
      },
      "1018": {
        "name": "UnsafeSysVarAPI",
        "description": "The sysvar instructions API is unsafe and deprecated (wormhole exploit)",
        "url": "https://twitter.com/samczsun/status/1489044984296792064",
        "free": true
      },
      "1019": {
        "name": "UnvalidatedAccount",
        "description": "The account may not be properly validated and may be untrustful",
        "url": "https://medium.com/coinmonks/the-wormhole-hack-how-soteria-detects-the-vulnerability-automatically-eb0f433e8071"
      },
      "1020": {
        "name": "OutdatedDependency",
        "description": "The program has outdated and vulnerable dependencies",
        "url": "https://medium.com/coinmonks/the-wormhole-hack-how-soteria-detects-the-vulnerability-automatically-eb0f433e8071"
      },
      "1021": {
        "name": "UnsafeRust",
        "description": "The program contains unsafe Rust code",
        "url": "https://www.sec3.dev/blog/solana-internals-part-4-the-bank-a-key-component"
      },
      "1022": {
        "name": "OverPayment",
        "description": "The code misses checking to prevent over payment",
        "url": "https://github.com/jet-lab/jet-v1/pull/271"
      },
      "1023": {
        "name": "StalePriceFeed",
        "description": "The code may use a stale price feed (solend loss)",
        "url": "https://blog.solend.fi/response-to-solana-network-issues-5c8184607283"
      },
      "1024": {
        "name": "MissInitTokenMint",
        "description": "The init instruction misses minting pool tokens",
        "url": "https://www.sec3.dev/blog/solana-stake-pool-a-semantic-inconsistency-vulnerability-discovered-by-x-ray"
      },
      "1025": {
        "name": "MissRentExempt",
        "description": "The account misses rent exempt check",
        "url": "https://docs.solana.com/implemented-proposals/rent"
      },
      "1026": {
        "name": "MissFreezeAuthority",
        "description": "The account misses checking for freeze authority",
        "url": "https://spl.solana.com/token#freezing-accounts"
      },
      "1027": {
        "name": "FlashLoanRisk",
        "description": "The instruction may suffer from a flashloan risk due to internal price oracle",
        "url": "https://docs.solend.fi/developers/flash-loans"
      },
      "1028": {
        "name": "BidirectionalRounding",
        "description": "The arithmetics here may suffer from bidirectional rounding vulnerabilities",
        "url": "https://www.sec3.dev/blog/bidirectional-rounding"
      },
      "1029": {
        "name": "LossyCastTruncation",
        "description": "The cast operation here may lose precision due to truncation",
        "url": "https://internals.rust-lang.org/t/lets-deprecate-as-for-lossy-numeric-casts/16283"
      },
      "1030": {
        "name": "UnvalidatedPDAAccount",
        "description": "The PDA account may not be properly validated and may be untrustful",
        "url": "https://medium.com/coinmonks/the-wormhole-hack-how-soteria-detects-the-vulnerability-automatically-eb0f433e8071"
      },
      "1031": {
        "name": "UnvalidatedDestinationAccount",
        "description": "The account is used as destination in token transfer without validation and it could be the same as the transfer source account",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "1032": {
        "name": "IncorrectAuthorityAccount",
        "description": "The PDA account may be incorrectly used as shared authority and may allow any account to transfer or burn tokens",
        "url": "https://twitter.com/CharlieYouAI/status/1508842093514567687"
      },
      "1033": {
        "name": "InsecureAnchorInitIfNeeded",
        "description": "The `init_if_needed` keyword in anchor-lang prior to v0.24.x has a critical security bug",
        "url": "https://twitter.com/armaniferrante/status/1516425854183690257",
        "free": true
      },
      "1034": {
        "name": "InsecureSPLTokenCPI",
        "description": "The spl_token account may be arbitrary prior to version v3.1.1",
        "url": "https://github.com/project-serum/sealevel-attacks/tree/master/programs/5-arbitrary-cpi"
      },
      "1035": {
        "name": "InsecureAssociatedTokenAccount",
        "description": "The associated token account is missing PDA key check and may be faked",
        "url": "https://www.sec3.dev/blog/pda-bump-seeds"
      },
      "1036": {
        "name": "InsecureAccountRealloc",
        "description": "The account realloc in solana_program prior to v1.10.29 may cause programs to malfunction",
        "url": "https://twitter.com/jacobvcreech/status/1543968742606077952",
        "free": true
      },
      "1037": {
        "name": "PDASeedCollisions",
        "description": "These two PDA accounts may have the same seeds, which may lead to PDA collisions",
        "url": "https://docs.rs/anchor-lang/latest/anchor_lang/prelude/struct.Pubkey.html"
      },
      "2001": {
        "name": "IncorrectLoopBreakLogic",
        "description": "Loop break instead of continue (jet-v1 exploit)",
        "url": "https://twitter.com/JetProtocol/status/1476244740601524234"
      },
      "2002": {
        "name": "IncorrectConditionCheck",
        "description": "Liquidation condition >= should be >",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "2003": {
        "name": "ExponentialCalculation",
        "description": "The calculation has exponential complexity",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "2004": {
        "name": "IncorrectDivisionLogic",
        "description": "Incorrect checked_div instead of checked_ceil_div (spl-token-swap vulnerability: stable curve division)",
        "url": "https://github.com/solana-labs/solana-program-library/pull/2942"
      },
      "2005": {
        "name": "IncorrectTokenCalculation",
        "description": "The token amount calculation may be incorrect. Consider using the reserves instead of the balances.",
        "url": "https://medium.com/certora/exploiting-an-invariant-break-how-we-found-a-pool-draining-bug-in-sushiswaps-trident-585bd98a4d4f",
        "free": true
      },
      "3001": {
        "name": "BestSecurityPractice",
        "description": "The code does not follow best security practices",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "3002": {
        "name": "CriticalUnusedCode",
        "description": "The code may be redundant or unused, but appears critical",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "3003": {
        "name": "InconsistentAnchor",
        "description": "The program uses Anchor inconsistently across different instructions",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "3004": {
        "name": "InconsistentConfig",
        "description": "The configuration and initialization data are inconsistent",
        "url": "https://www.sec3.dev/blog/how-to-audit-solana-smart-contracts-part-1-a-systematic-approach"
      },
      "3005": {
        "name": "MissingCPIAccountReload",
        "description": "The token account's amount may be incorrect without calling reload after CPI",
        "url": "https://book.anchor-lang.com/anchor_in_depth/CPIs.html#reloading-an-account"
      },
      "3006": {
        "name": "MissingUnstakeAccessControl",
        "description": "The unstake instruction may be missing an access_control account validation",
        "url": "https://docs.rs/anchor-lang/latest/anchor_lang/attr.access_control.html"
      },
      "3007": {
        "name": "OrderRaceCondition",
        "description": "The instruction may suffer from a race condition between order cancellation and order recreation by an attacker",
        "url": "https://twitter.com/tarunchitra/status/1455204028808376321"
      },
      "3008": {
        "name": "NewAccountNotBackwardsCompatible",
        "description": "The account may break the ABI of the deployed on-chain program as it does not exist in the IDL available on Anchor",
        "url": "https://twitter.com/pencilflip/status/1559945837844856834",
        "free": true
      },
      "3009": {
        "name": "MutableAccountNotBackwardsCompatible",
        "description": "The mutable account may break the ABI of the deployed on-chain program as it is immutable according to the IDL available on Anchor",
        "url": "https://twitter.com/pencilflip/status/1559945837844856834",
        "free": true
      },
      "3010": {
        "name": "ReOrderAccountsNotBackwardsCompatible",
        "description": "These two accounts are reordered in the instruction and may break the ABI of the deployed on-chain program, according to the IDL available on Anchor",
        "url": "https://twitter.com/pencilflip/status/1559945837844856834",
        "free": true
      },
      "10001": {
        "name": "ReentrancyEtherVulnerability",
        "description": "The function may suffer from reentrancy attacks due to the use of call.value, which can invoke an external contract's fallback function",
        "url": "https://consensys.github.io/smart-contract-best-practices/attacks/reentrancy/",
        "free": true
      },
      "10002": {
        "name": "ArbitrarySendERC20",
        "description": "The function may allow an attacker to send from an arbitrary address, instead of from the msg.sender",
        "url": "https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-send-erc20",
        "free": true
      },
      "10003": {
        "name": "UnprotectedSelfDestruct",
        "description": "The function may allow an attacker to destruct the contract",
        "url": "https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal",
        "free": true
      },
      "10004": {
        "name": "MissingCalleeCheck",
        "description": "The function may be missing a check callee != address(this)",
        "url": "https://medium.com/certora/certora-technology-white-paper-cae5ab0bdf1",
        "free": true
      },
      "20001": {
        "name": "MissingInitAdminCheck",
        "description": "The init function misses checking admin uniqueness and may allow an attacker to call the init function more than once",
        "url": "https://github.com/XP-NETWORK/",
        "free": true
      },
      "20002": {
        "name": "BitShiftOverflow",
        "description": "The bit shift operation may result in overflows",
        "url": "https://www.zellic.io/blog/move-fast-and-break-things-pt-1",
        "free": true
      },
      "20003": {
        "name": "DivisionPrecisionLoss",
        "description": "The division operation here may lose precision",
        "url": "https://www.zellic.io/blog/move-fast-and-break-things-pt-1",
        "free": true
      },
      "20004": {
        "name": "VulnerableI128Implementation",
        "description": "The I128 signed integer implementation in Move is not recommended and may be vulnerable. Consider using the built-in Move types only.",
        "url": "https://diem.github.io/move/integers.html",
        "free": true
      }
    }
  },
  "heapAllocFunctions": [
    "je_malloc",
    "je_calloc",
    "je_mallocx",
    "u_malloc",
    "u_calloc",
    "rm_malloc",
    "rm_calloc"
  ],
  "lockUnlockFunctions": {
    "malloc_mutex_lock": "malloc_mutex_unlock"
  }
}
