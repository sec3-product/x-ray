name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-amd64:
    runs-on: self-hosted

    env:
      BUILD_DIR: ${{ github.workspace }}/build
      LLVM_PREBUILT_PATH: ${{ github.workspace }}/build/llvm
      VERSION: ${{ github.ref_name }}
      X_RAY_IMAGE: ghcr.io/sec3-product/x-ray:${{ github.ref_name }}-amd64
      DIST_TARBALL: ${{ github.workspace }}/build/x-ray-${{ github.ref_name }}-linux-amd64.tar.gz

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Remove existing GitHub registry login
        run: |
          docker logout ghcr.io

      - name: Extract LLVM prebuilt binaries
        run: |
          make extract-llvm

      - name: Build and package
        run: |
          make -j build-container-image build-x-ray dist

      - name: Run E2E tests
        run: |
          make -j run-container-e2e run-native-e2e

      - name: Upload dist files
        uses: actions/upload-artifact@v4
        with:
          name: dist-amd64
          path: ${{ env.DIST_TARBALL }}

      - name: Login to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push container image
        run: |
          docker push ${{ env.X_RAY_IMAGE }}

  build-arm64:
    runs-on: [self-hosted, qemu]

    env:
      BUILD_DIR: ${{ github.workspace }}/build
      LLVM_PREBUILT_PATH: ${{ github.workspace }}/build/llvm
      TARGET_ARCH: arm64
      VERSION: ${{ github.ref_name }}
      X_RAY_IMAGE: ghcr.io/sec3-product/x-ray:${{ github.ref_name }}-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove existing GitHub registry login
        run: |
          docker logout ghcr.io

      - name: Build and package
        run: |
          make -j build-container-image

      - name: Login to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push container image
        run: |
          docker push ${{ env.X_RAY_IMAGE }}

  release:
    runs-on: self-hosted
    needs: [build-amd64, build-arm64]

    env:
      VERSION: ${{ github.ref_name }}
      X_RAY_IMAGE: ghcr.io/sec3-product/x-ray:${{ github.ref_name }}
      X_RAY_IMAGE_AMD64: ghcr.io/sec3-product/x-ray:${{ github.ref_name }}-amd64
      X_RAY_IMAGE_ARM64: ghcr.io/sec3-product/x-ray:${{ github.ref_name }}-arm64
      X_RAY_IMAGE_LATEST: ghcr.io/sec3-product/x-ray:latest

    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-amd64

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          repository: sec3-product/x-ray
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            Release notes for version ${{ github.ref_name }}
          files: |
            x-ray-${{ github.ref_name }}-linux-amd64.tar.gz

      - name: Login to registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Create and push multiarch manifest to registry
        run: |
          docker manifest create --amend ${{ env.X_RAY_IMAGE }} \
            ${{ env.X_RAY_IMAGE_AMD64 }} \
            ${{ env.X_RAY_IMAGE_ARM64 }}
          docker manifest push ${{ env.X_RAY_IMAGE }}
          docker tag ${{ env.X_RAY_IMAGE }} ${{ env.X_RAY_IMAGE_LATEST }}
          docker push ${{ env.X_RAY_IMAGE_LATEST }}
