raceData = 
{"bcfile":"/RedisGraph/graphblas_recreate_race/recreate_race.bc","generatedAt":"Tue 18 Feb 2020 04:47:36 AM","races":[{"access1":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_hyper.c","line":140,"snippet":" 138|                { \n 139|                    // vector index j is the kth vector in the new Ah\n>140|                    Ap_new [k] = Ap_old [j] ;\n 141|                    Ah_new [k] = j ;\n 142|                    k++ ;\n","sourceLine":" 140|                    Ap_new [k] = Ap_old [j] ;\n","stacktrace":[".omp_outlined._debug__.2.8881 [Source/GB_to_hyper.c:131]"]},"access2":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_hyper.c","line":140,"snippet":" 138|                { \n 139|                    // vector index j is the kth vector in the new Ah\n>140|                    Ap_new [k] = Ap_old [j] ;\n 141|                    Ah_new [k] = j ;\n 142|                    k++ ;\n","sourceLine":" 140|                    Ap_new [k] = Ap_old [j] ;\n","stacktrace":[".omp_outlined._debug__.2.8881 [Source/GB_to_hyper.c:131]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_hyper.c","line":103,"sourceLine":" 103|        GB_MALLOC_MEMORY (Ap_new, nvec_nonempty+1, sizeof (int64_t)) ;\n"}},{"access1":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_nonhyper.c","line":175,"snippet":" 173|                for (int64_t j = jlast+1 ; j <= jfin ; j++)\n 174|                { \n>175|                    Ap_new [j] = pk ;\n 176|                }\n 177|\n","sourceLine":" 175|                    Ap_new [j] = pk ;\n","stacktrace":[".omp_outlined._debug__.8895 [Source/GB_to_nonhyper.c:92]"]},"access2":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_nonhyper.c","line":175,"snippet":" 173|                for (int64_t j = jlast+1 ; j <= jfin ; j++)\n 174|                { \n>175|                    Ap_new [j] = pk ;\n 176|                }\n 177|\n","sourceLine":" 175|                    Ap_new [j] = pk ;\n","stacktrace":[".omp_outlined._debug__.8895 [Source/GB_to_nonhyper.c:92]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_to_nonhyper.c","line":62,"sourceLine":" 62|        GB_MALLOC_MEMORY (Ap_new, n+1, sizeof (int64_t)) ;\n"}},{"access1":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":270,"snippet":" 268|                    int64_t kA = 0, pA, pA_end ;\n 269|                    GB_lookup (true, Ah, Ap, &kA, Anvec-1, j, &pA, &pA_end) ;\n>270|                    C_to_A [k] = (pA < pA_end) ? kA : -1 ;\n 271|                }\n 272|                if (B_is_hyper)\n","sourceLine":" 270|                    C_to_A [k] = (pA < pA_end) ? kA : -1 ;\n","stacktrace":[]},"access2":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":270,"snippet":" 268|                    int64_t kA = 0, pA, pA_end ;\n 269|                    GB_lookup (true, Ah, Ap, &kA, Anvec-1, j, &pA, &pA_end) ;\n>270|                    C_to_A [k] = (pA < pA_end) ? kA : -1 ;\n 271|                }\n 272|                if (B_is_hyper)\n","sourceLine":" 270|                    C_to_A [k] = (pA < pA_end) ? kA : -1 ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":94,"sourceLine":" 94|        GB_MALLOC_MEMORY (*C_to_A_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":420,"snippet":" 418|                { \n 419|                    // append jB to Ch\n>420|                    Ch     [kC] = jB ;\n 421|                    C_to_A [kC] = -1 ;       // jB does not appear in A\n 422|                    C_to_B [kC] = kB++ ;\n","sourceLine":" 420|                    Ch     [kC] = jB ;\n","stacktrace":[".omp_outlined._debug__.4 [Source/GB_add_phase0.c:396]"]},"access2":{"col":28,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":420,"snippet":" 418|                { \n 419|                    // append jB to Ch\n>420|                    Ch     [kC] = jB ;\n 421|                    C_to_A [kC] = -1 ;       // jB does not appear in A\n 422|                    C_to_B [kC] = kB++ ;\n","sourceLine":" 420|                    Ch     [kC] = jB ;\n","stacktrace":[".omp_outlined._debug__.4 [Source/GB_add_phase0.c:396]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":84,"sourceLine":" 84|        GB_MALLOC_MEMORY (*Ch_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":553,"snippet":" 551|        { \n 552|            int64_t jA = GB_Ah (kA) ;\n>553|            C_to_A [jA] = kA ;\n 554|        }\n 555|\n","sourceLine":" 553|            C_to_A [jA] = kA ;\n","stacktrace":[".omp_outlined._debug__.8.533 [Source/GB_add_phase0.c:550]"]},"access2":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":553,"snippet":" 551|        { \n 552|            int64_t jA = GB_Ah (kA) ;\n>553|            C_to_A [jA] = kA ;\n 554|        }\n 555|\n","sourceLine":" 553|            C_to_A [jA] = kA ;\n","stacktrace":[".omp_outlined._debug__.8.533 [Source/GB_add_phase0.c:550]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":94,"sourceLine":" 94|        GB_MALLOC_MEMORY (*C_to_A_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":588,"snippet":" 586|        { \n 587|            int64_t jB = Bh [kB] ;\n>588|            C_to_B [jB] = kB ;\n 589|        }\n 590|\n","sourceLine":" 588|            C_to_B [jB] = kB ;\n","stacktrace":[".omp_outlined._debug__.12.532 [Source/GB_add_phase0.c:585]"]},"access2":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":588,"snippet":" 586|        { \n 587|            int64_t jB = Bh [kB] ;\n>588|            C_to_B [jB] = kB ;\n 589|        }\n 590|\n","sourceLine":" 588|            C_to_B [jB] = kB ;\n","stacktrace":[".omp_outlined._debug__.12.532 [Source/GB_add_phase0.c:585]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":99,"sourceLine":" 99|        GB_MALLOC_MEMORY (*C_to_B_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":24,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":630,"snippet":" 628|                int64_t kM = 0, pM, pM_end ;\n 629|                GB_lookup (true, Mh, Mp, &kM, Mnvec-1, j, &pM, &pM_end) ;\n>630|                C_to_M [k] = (pM < pM_end) ? kM : -1 ;\n 631|            }\n 632|        }\n","sourceLine":" 630|                C_to_M [k] = (pM < pM_end) ? kM : -1 ;\n","stacktrace":[".omp_outlined._debug__.14.529 [Source/GB_add_phase0.c:624]"]},"access2":{"col":24,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":630,"snippet":" 628|                int64_t kM = 0, pM, pM_end ;\n 629|                GB_lookup (true, Mh, Mp, &kM, Mnvec-1, j, &pM, &pM_end) ;\n>630|                C_to_M [k] = (pM < pM_end) ? kM : -1 ;\n 631|            }\n 632|        }\n","sourceLine":" 630|                C_to_M [k] = (pM < pM_end) ? kM : -1 ;\n","stacktrace":[".omp_outlined._debug__.14.529 [Source/GB_add_phase0.c:624]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":89,"sourceLine":" 89|        GB_MALLOC_MEMORY (*C_to_M_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":24,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":646,"snippet":" 644|            { \n 645|                int64_t jM = Mh [kM] ;\n>646|                C_to_M [jM] = kM ;\n 647|            }\n 648|        }\n","sourceLine":" 646|                C_to_M [jM] = kM ;\n","stacktrace":[".omp_outlined._debug__.18.528 [Source/GB_add_phase0.c:643]"]},"access2":{"col":24,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":646,"snippet":" 644|            { \n 645|                int64_t jM = Mh [kM] ;\n>646|                C_to_M [jM] = kM ;\n 647|            }\n 648|        }\n","sourceLine":" 646|                C_to_M [jM] = kM ;\n","stacktrace":[".omp_outlined._debug__.18.528 [Source/GB_add_phase0.c:643]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase0.c","line":89,"sourceLine":" 89|        GB_MALLOC_MEMORY (*C_to_M_handle, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_add_template.c","line":632,"snippet":" 630|            else\n 631|            { \n>632|                Cp [k] = cjnz ;\n 633|            }\n 634|            #endif\n","sourceLine":" 632|                Cp [k] = cjnz ;\n","stacktrace":[".omp_outlined._debug__.542 [Source/Template/GB_add_template.c:64]"]},"access2":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_add_template.c","line":632,"snippet":" 630|            else\n 631|            { \n>632|                Cp [k] = cjnz ;\n 633|            }\n 634|            #endif\n","sourceLine":" 632|                Cp [k] = cjnz ;\n","stacktrace":[".omp_outlined._debug__.542 [Source/Template/GB_add_template.c:64]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_add_phase1.c","line":68,"sourceLine":" 68|    GB_CALLOC_MEMORY (Cp, GB_IMAX (2, Cnvec+1), sizeof (int64_t)) ;\n"}},{"access1":{"col":16,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_hyper_prune.c","line":105,"snippet":" 103|        { \n 104|            int64_t knew = W [k] ;\n>105|            Ap [knew] = Ap_old [k] ;\n 106|            Ah [knew] = Ah_old [k] ;\n 107|        }\n","sourceLine":" 105|            Ap [knew] = Ap_old [k] ;\n","stacktrace":[".omp_outlined._debug__.2.1100 [Source/GB_hyper_prune.c:100]"]},"access2":{"col":16,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_hyper_prune.c","line":105,"snippet":" 103|        { \n 104|            int64_t knew = W [k] ;\n>105|            Ap [knew] = Ap_old [k] ;\n 106|            Ah [knew] = Ah_old [k] ;\n 107|        }\n","sourceLine":" 105|            Ap [knew] = Ap_old [k] ;\n","stacktrace":[".omp_outlined._debug__.2.1100 [Source/GB_hyper_prune.c:100]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_hyper_prune.c","line":84,"sourceLine":" 84|    GB_MALLOC_MEMORY (Ap, nvec+1, sizeof (int64_t)) ;\n"}},{"access1":{"col":32,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose.c","line":605,"snippet":" 603|                        if (Ap [j] < Ap [j+1])\n 604|                        { \n>605|                            Ci [k++] = j ;\n 606|                        }\n 607|                    }\n","sourceLine":" 605|                            Ci [k++] = j ;\n","stacktrace":[".omp_outlined._debug__.4.8913 [Source/GB_transpose.c:597]"]},"access2":{"col":32,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose.c","line":605,"snippet":" 603|                        if (Ap [j] < Ap [j+1])\n 604|                        { \n>605|                            Ci [k++] = j ;\n 606|                        }\n 607|                    }\n","sourceLine":" 605|                            Ci [k++] = j ;\n","stacktrace":[".omp_outlined._debug__.4.8913 [Source/GB_transpose.c:597]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose.c","line":480,"sourceLine":" 480|            GB_MALLOC_MEMORY (Ci, anz, sizeof (int64_t)) ;\n"}},{"access1":{"col":19,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_extract_vector_list.c","line":98,"snippet":" 96|            for (int64_t p = pA_start ; p < pA_end ; p++)\n 97|            { \n>98|                J [p] = j ;\n 99|            }\n 100|        }\n","sourceLine":" 98|                J [p] = j ;\n","stacktrace":[".omp_outlined._debug__.1064 [Source/GB_extract_vector_list.c:73]"]},"access2":{"col":19,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_extract_vector_list.c","line":98,"snippet":" 96|            for (int64_t p = pA_start ; p < pA_end ; p++)\n 97|            { \n>98|                J [p] = j ;\n 99|            }\n 100|        }\n","sourceLine":" 98|                J [p] = j ;\n","stacktrace":[".omp_outlined._debug__.1064 [Source/GB_extract_vector_list.c:73]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose.c","line":713,"sourceLine":" 713|            GB_MALLOC_MEMORY (iwork, anz, sizeof (int64_t)) ;\n"}},{"access1":{"col":30,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_unaryop_transpose.c","line":49,"snippet":" 47|                #if defined ( GB_PHASE_1_OF_2)\n 48|                // count one more entry in C(i,:) for this slice\n>49|                rowcount [Ai [pA]]++ ;\n 50|                #else\n 51|                // insert the entry into C(i,:) for this slice\n","sourceLine":" 49|                rowcount [Ai [pA]]++ ;\n","stacktrace":[".omp_outlined._debug__.8927 [Source/Template/GB_unaryop_transpose.c:36]"]},"access2":{"col":35,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_unaryop_transpose.c","line":49,"snippet":" 47|                #if defined ( GB_PHASE_1_OF_2)\n 48|                // count one more entry in C(i,:) for this slice\n>49|                rowcount [Ai [pA]]++ ;\n 50|                #else\n 51|                // insert the entry into C(i,:) for this slice\n","sourceLine":" 49|                rowcount [Ai [pA]]++ ;\n","stacktrace":[".omp_outlined._debug__.8927 [Source/Template/GB_unaryop_transpose.c:36]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":150,"sourceLine":" 150|        GB_CALLOC_MEMORY (rowcount, vlen + 1, sizeof (int64_t)) ;\n"}},{"access1":{"col":26,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":216,"snippet":" 214|                int64_t *restrict rowcount = Rowcounts [taskid] ;\n 215|                int64_t c = rowcount [i] ;\n>216|                rowcount [i] = s ;\n 217|                s += c ;\n 218|            }\n","sourceLine":" 216|                rowcount [i] = s ;\n","stacktrace":[".omp_outlined._debug__.2.8926 [Source/GB_transpose_bucket.c:209]"]},"access2":{"col":29,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":215,"snippet":" 213|            { \n 214|                int64_t *restrict rowcount = Rowcounts [taskid] ;\n>215|                int64_t c = rowcount [i] ;\n 216|                rowcount [i] = s ;\n 217|                s += c ;\n","sourceLine":" 215|                int64_t c = rowcount [i] ;\n","stacktrace":[".omp_outlined._debug__.2.8926 [Source/GB_transpose_bucket.c:209]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":150,"sourceLine":" 150|        GB_CALLOC_MEMORY (rowcount, vlen + 1, sizeof (int64_t)) ;\n"}},{"access1":{"col":22,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":232,"snippet":" 230|            int64_t s = Cp [i] ;\n 231|            int64_t *restrict rowcount = Rowcounts [0] ;\n>232|            rowcount [i] = s ;\n 233|            for (int taskid = 1 ; taskid < naslice ; taskid++)\n 234|            { \n","sourceLine":" 232|            rowcount [i] = s ;\n","stacktrace":[".omp_outlined._debug__.4.8925 [Source/GB_transpose_bucket.c:228]"]},"access2":{"col":30,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":236,"snippet":" 234|            { \n 235|                int64_t *restrict rowcount = Rowcounts [taskid] ;\n>236|                rowcount [i] += s ;\n 237|            }\n 238|        }\n","sourceLine":" 236|                rowcount [i] += s ;\n","stacktrace":[".omp_outlined._debug__.4.8925 [Source/GB_transpose_bucket.c:228]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":150,"sourceLine":" 150|        GB_CALLOC_MEMORY (rowcount, vlen + 1, sizeof (int64_t)) ;\n"}},{"access1":{"col":43,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_unaryop_transpose.c","line":52,"snippet":" 50|                #else\n 51|                // insert the entry into C(i,:) for this slice\n>52|                int64_t pC = rowcount [Ai [pA]]++ ;\n 53|                Ci [pC] = j ;\n 54|                // Cx [pC] = op (cast (Ax [pA]))\n","sourceLine":" 52|                int64_t pC = rowcount [Ai [pA]]++ ;\n","stacktrace":[".omp_outlined._debug__.1.713 [Source/Template/GB_unaryop_transpose.c:36]"]},"access2":{"col":48,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_unaryop_transpose.c","line":52,"snippet":" 50|                #else\n 51|                // insert the entry into C(i,:) for this slice\n>52|                int64_t pC = rowcount [Ai [pA]]++ ;\n 53|                Ci [pC] = j ;\n 54|                // Cx [pC] = op (cast (Ax [pA]))\n","sourceLine":" 52|                int64_t pC = rowcount [Ai [pA]]++ ;\n","stacktrace":[".omp_outlined._debug__.1.713 [Source/Template/GB_unaryop_transpose.c:36]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_transpose_bucket.c","line":150,"sourceLine":" 150|        GB_CALLOC_MEMORY (rowcount, vlen + 1, sizeof (int64_t)) ;\n"}},{"access1":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_is_diagonal.c","line":119,"snippet":" 117|        { \n 118|            #pragma omp atomic write\n>119|            diagonal = false ;\n 120|        }\n 121|    }\n","sourceLine":" 119|            diagonal = false ;\n","stacktrace":[".omp_outlined._debug__.1136 [Source/GB_is_diagonal.c:75]"]},"access2":{"col":13,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_is_diagonal.c","line":85,"snippet":" 83|        { \n 84|            #pragma omp atomic read\n>85|            diag = diagonal ;\n 86|        }\n 87|        if (!diag) continue ;\n","sourceLine":" 85|            diag = diagonal ;\n","stacktrace":[".omp_outlined._debug__.1136 [Source/GB_is_diagonal.c:75]"]},"sharedObj":{"dir":"","filename":"","line":85,"sourceLine":" 85|\n"}},{"access1":{"col":25,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_dot2_nomask.c","line":60,"snippet":" 58|            { \n 59|                // C(i,j) is if A(:i) not empty\n>60|                C_count [Iter_k] = A->nvec_nonempty ;\n 61|                continue ;\n 62|            }\n","sourceLine":" 60|                C_count [Iter_k] = A->nvec_nonempty ;\n","stacktrace":[]},"access2":{"col":34,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_dot_cij.c","line":319,"snippet":" 317|            // C(i,j) = cij\n 318|            #if defined ( GB_PHASE_1_OF_2 )\n>319|                C_count [Iter_k] ++ ;\n 320|            #else\n 321|                GB_CIJ_SAVE (cij, cnz) ;\n","sourceLine":" 319|                C_count [Iter_k] ++ ;\n","stacktrace":[".omp_outlined._debug__.33 [Source/Template/GB_AxB_dot2_nomask.c:13]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_dot2.c","line":158,"sourceLine":" 158|        GB_CALLOC_MEMORY (C_count, B->nvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":25,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_dot_cij.c","line":319,"snippet":" 317|            // C(i,j) = cij\n 318|            #if defined ( GB_PHASE_1_OF_2 )\n>319|                C_count [Iter_k] ++ ;\n 320|            #else\n 321|                GB_CIJ_SAVE (cij, cnz) ;\n","sourceLine":" 319|                C_count [Iter_k] ++ ;\n","stacktrace":[".omp_outlined._debug__.1 [Source/Template/GB_AxB_dot2_compmask.c:14]"]},"access2":{"col":34,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_dot_cij.c","line":319,"snippet":" 317|            // C(i,j) = cij\n 318|            #if defined ( GB_PHASE_1_OF_2 )\n>319|                C_count [Iter_k] ++ ;\n 320|            #else\n 321|                GB_CIJ_SAVE (cij, cnz) ;\n","sourceLine":" 319|                C_count [Iter_k] ++ ;\n","stacktrace":[".omp_outlined._debug__.1 [Source/Template/GB_AxB_dot2_compmask.c:14]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_dot2.c","line":158,"sourceLine":" 158|        GB_CALLOC_MEMORY (C_count, B->nvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":21,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_dot2.c","line":202,"snippet":" 200|            int64_t *restrict C_count = C_counts [taskid] ;\n 201|            int64_t c = C_count [k] ;\n>202|            C_count [k] = s ;\n 203|            s += c ;\n 204|        }\n","sourceLine":" 202|            C_count [k] = s ;\n","stacktrace":[".omp_outlined._debug__.3.32 [Source/GB_AxB_dot2.c:195]"]},"access2":{"col":25,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_dot2.c","line":201,"snippet":" 199|        { \n 200|            int64_t *restrict C_count = C_counts [taskid] ;\n>201|            int64_t c = C_count [k] ;\n 202|            C_count [k] = s ;\n 203|            s += c ;\n","sourceLine":" 201|            int64_t c = C_count [k] ;\n","stacktrace":[".omp_outlined._debug__.3.32 [Source/GB_AxB_dot2.c:195]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_dot2.c","line":158,"sourceLine":" 158|        GB_CALLOC_MEMORY (C_count, B->nvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":5,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_select.c","line":69,"snippet":" 67|    }\n 68|\n>69|    (*bjnz_max) = b ;\n 70|    B->nvec_nonempty = nvec_nonempty ;\n 71|\n","sourceLine":" 69|    (*bjnz_max) = b ;\n","stacktrace":[]},"access2":{"col":5,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_select.c","line":69,"snippet":" 67|    }\n 68|\n>69|    (*bjnz_max) = b ;\n 70|    B->nvec_nonempty = nvec_nonempty ;\n 71|\n","sourceLine":" 69|    (*bjnz_max) = b ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_saxpy_parallel.c","line":336,"sourceLine":" 336|    GB_CALLOC_MEMORY (bjnz_max, nthreads, sizeof (int64_t)) ;\n"}},{"access1":{"col":5,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_heap.c","line":88,"snippet":" 86|    }\n 87|\n>88|    (*Chandle) = NULL ;\n 89|\n 90|    // the heap method does not handle a complemented mask\n","sourceLine":" 88|    (*Chandle) = NULL ;\n","stacktrace":[]},"access2":{"col":32,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_create.c","line":65,"snippet":" 63|    //--------------------------------------------------------------------------\n 64|\n>65|    bool preexisting_header = (*Ahandle != NULL) ;\n 66|    GrB_Info info = GB_new (Ahandle, type, vlen, vdim, Ap_option,\n 67|        is_csc, hyper_option, hyper_ratio, plen, Context) ;\n","sourceLine":" 65|    bool preexisting_header = (*Ahandle != NULL) ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_saxpy_parallel.c","line":338,"sourceLine":" 338|    GB_CALLOC_MEMORY (Cslice, nthreads, sizeof (GrB_Matrix)) ;\n"}},{"access1":{"col":35,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_alloc.c","line":107,"snippet":" 105|        }\n 106|\n>107|        if (B->nvec_nonempty < 0) B->nvec_nonempty = bnvec_nonempty ;\n 108|        ASSERT (B->nvec_nonempty == GB_nvec_nonempty (B, NULL)) ;\n 109|\n","sourceLine":" 107|        if (B->nvec_nonempty < 0) B->nvec_nonempty = bnvec_nonempty ;\n","stacktrace":[]},"access2":{"col":16,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_alloc.c","line":107,"snippet":" 105|        }\n 106|\n>107|        if (B->nvec_nonempty < 0) B->nvec_nonempty = bnvec_nonempty ;\n 108|        ASSERT (B->nvec_nonempty == GB_nvec_nonempty (B, NULL)) ;\n 109|\n","sourceLine":" 107|        if (B->nvec_nonempty < 0) B->nvec_nonempty = bnvec_nonempty ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_new.c","line":72,"sourceLine":" 72|        GB_CALLOC_MEMORY (*Ahandle, 1, sizeof (struct GB_Matrix_opaque)) ;\n"}},{"access1":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna_free.c","line":23,"snippet":" 21|        // free all content of the Sauna\n 22|        size_t Sauna_n = Sauna->Sauna_n ;\n>23|        GB_FREE_MEMORY (Sauna->Sauna_Mark, Sauna_n+1, sizeof (int64_t)) ;\n 24|        GB_FREE_MEMORY (Sauna->Sauna_Work, Sauna_n+1, Sauna->Sauna_size) ;\n 25|        // free the header of the Sauna itself\n","sourceLine":" 23|        GB_FREE_MEMORY (Sauna->Sauna_Mark, Sauna_n+1, sizeof (int64_t)) ;\n","stacktrace":["GB_Global_free_function [Source/GB_free_memory.c:81]","GB_free_memory [Source/GB_Sauna_free.c:23]"]},"access2":{"col":9,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna_free.c","line":23,"snippet":" 21|        // free all content of the Sauna\n 22|        size_t Sauna_n = Sauna->Sauna_n ;\n>23|        GB_FREE_MEMORY (Sauna->Sauna_Mark, Sauna_n+1, sizeof (int64_t)) ;\n 24|        GB_FREE_MEMORY (Sauna->Sauna_Work, Sauna_n+1, Sauna->Sauna_size) ;\n 25|        // free the header of the Sauna itself\n","sourceLine":" 23|        GB_FREE_MEMORY (Sauna->Sauna_Mark, Sauna_n+1, sizeof (int64_t)) ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna_alloc.c","line":33,"sourceLine":" 33|    GB_CALLOC_MEMORY (Sauna, 1, sizeof (struct GB_Sauna_struct)) ;\n"}},{"access1":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_heap_mask.c","line":421,"snippet":" 419|                Ci [cnz] = i ;\n 420|                // Cx [cnz] = cij ;\n>421|                GB_CIJ_SAVE (cij, cnz) ;\n 422|                cnz++ ;\n 423|            }\n","sourceLine":" 421|                GB_CIJ_SAVE (cij, cnz) ;\n","stacktrace":[]},"access2":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/Template/GB_AxB_heap_mask.c","line":421,"snippet":" 419|                Ci [cnz] = i ;\n 420|                // Cx [cnz] = cij ;\n>421|                GB_CIJ_SAVE (cij, cnz) ;\n 422|                cnz++ ;\n 423|            }\n","sourceLine":" 421|                GB_CIJ_SAVE (cij, cnz) ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_AxB_Gustavson.c","line":196,"sourceLine":" 196|    GB_MALLOC_MEMORY (C->x, C->nzmax, zsize) ;\n"}},{"access1":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_ix_alloc.c","line":55,"snippet":" 53|    // allocate the new A->x and A->i content\n 54|    A->nzmax = GB_IMAX (nzmax, 1) ;\n>55|    GB_MALLOC_MEMORY (A->i, A->nzmax, sizeof (int64_t)) ;\n 56|    if (numeric)\n 57|    { \n","sourceLine":" 55|    GB_MALLOC_MEMORY (A->i, A->nzmax, sizeof (int64_t)) ;\n","stacktrace":[]},"access2":{"col":12,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_ix_alloc.c","line":61,"snippet":" 59|    }\n 60|\n>61|    if (A->i == NULL || (numeric && A->x == NULL))\n 62|    { \n 63|        // out of memory\n","sourceLine":" 61|    if (A->i == NULL || (numeric && A->x == NULL))\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_new.c","line":72,"sourceLine":" 72|        GB_CALLOC_MEMORY (*Ahandle, 1, sizeof (struct GB_Matrix_opaque)) ;\n"}},{"access1":{"col":22,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Global.c","line":317,"snippet":" 315|void GB_Global_Saunas_set (int id, GB_Sauna Sauna)\n 316|{ \n>317|    GB_Global.Saunas [id] = Sauna ;\n 318|}\n 319|\n","sourceLine":" 317|    GB_Global.Saunas [id] = Sauna ;\n","stacktrace":["GB_Global_Saunas_set [Source/GB_Sauna_free.c:27]","GB_Sauna_free [Source/GB_AxB_Gustavson.c:132]"]},"access2":{"col":13,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Global.c","line":322,"snippet":" 320|GB_Sauna GB_Global_Saunas_get (int id)\n 321|{ \n>322|    return (GB_Global.Saunas [id]) ;\n 323|}\n 324|\n","sourceLine":" 322|    return (GB_Global.Saunas [id]) ;\n","stacktrace":["GB_Global_Saunas_get [Source/GB_AxB_Gustavson.c:128]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Global.c","line":146,"sourceLine":" 146|GB_Global_struct GB_Global =\n"}},{"access1":{"col":17,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_ijsort.c","line":206,"snippet":" 204|        { \n 205|            // the first entry in I1 is never a duplicate\n>206|            I2  [k2] = I1  [0] ;\n 207|            I2k [k2] = (ni - I1k [0]) ;\n 208|            k2++ ;\n","sourceLine":" 206|            I2  [k2] = I1  [0] ;\n","stacktrace":[".omp_outlined._debug__.4.1126 [Source/GB_ijsort.c:199]"]},"access2":{"col":17,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_ijsort.c","line":206,"snippet":" 204|        { \n 205|            // the first entry in I1 is never a duplicate\n>206|            I2  [k2] = I1  [0] ;\n 207|            I2k [k2] = (ni - I1k [0]) ;\n 208|            k2++ ;\n","sourceLine":" 206|            I2  [k2] = I1  [0] ;\n","stacktrace":[".omp_outlined._debug__.4.1126 [Source/GB_ijsort.c:199]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_ijsort.c","line":183,"sourceLine":" 183|    GB_MALLOC_MEMORY (I2 , ni2, sizeof (GrB_Index)) ;\n"}},{"access1":{"col":14,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":135,"snippet":" 133|    // accessed for constructing C(:,kC).\n 134|\n>135|    Ap_start [kC] = pA ;\n 136|    Ap_end   [kC] = pA_end ;\n 137|}\n","sourceLine":" 135|    Ap_start [kC] = pA ;\n","stacktrace":["GB_find_Ap_start_end [Source/GB_subref_phase0.c:527]",".omp_outlined._debug__.4.8827 [Source/GB_subref_phase0.c:524]"]},"access2":{"col":14,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":135,"snippet":" 133|    // accessed for constructing C(:,kC).\n 134|\n>135|    Ap_start [kC] = pA ;\n 136|    Ap_end   [kC] = pA_end ;\n 137|}\n","sourceLine":" 135|    Ap_start [kC] = pA ;\n","stacktrace":["GB_find_Ap_start_end [Source/GB_subref_phase0.c:527]",".omp_outlined._debug__.4.8827 [Source/GB_subref_phase0.c:524]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":485,"sourceLine":" 485|        GB_MALLOC_MEMORY (Ap_start, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":16,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":548,"snippet":" 546|            int64_t jA = Ah [kA] ;\n 547|            int64_t jC = jA - jmin ;\n>548|            Ch [kC] = jC ;\n 549|            GB_find_Ap_start_end (kA, Ap, Ai, avlen, imin, imax,\n 550|                kC, nzombies, Ap_start, Ap_end) ;\n","sourceLine":" 548|            Ch [kC] = jC ;\n","stacktrace":[]},"access2":{"col":16,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":548,"snippet":" 546|            int64_t jA = Ah [kA] ;\n 547|            int64_t jC = jA - jmin ;\n>548|            Ch [kC] = jC ;\n 549|            GB_find_Ap_start_end (kA, Ap, Ai, avlen, imin, imax,\n 550|                kC, nzombies, Ap_start, Ap_end) ;\n","sourceLine":" 548|            Ch [kC] = jC ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_phase0.c","line":475,"sourceLine":" 475|        GB_MALLOC_MEMORY (Ch, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":15,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_slice.c","line":208,"snippet":" 206|        // log the result\n 207|        need_I_inverse = need_I_inverse || this_needs_I_inverse ;\n>208|        Cwork [kC] = work ;\n 209|    }\n 210|\n","sourceLine":" 208|        Cwork [kC] = work ;\n","stacktrace":[".omp_outlined._debug__.8862 [Source/GB_subref_slice.c:178]"]},"access2":{"col":15,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_slice.c","line":208,"snippet":" 206|        // log the result\n 207|        need_I_inverse = need_I_inverse || this_needs_I_inverse ;\n>208|        Cwork [kC] = work ;\n 209|    }\n 210|\n","sourceLine":" 208|        Cwork [kC] = work ;\n","stacktrace":[".omp_outlined._debug__.8862 [Source/GB_subref_slice.c:178]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subref_slice.c","line":156,"sourceLine":" 156|    GB_MALLOC_MEMORY (Cwork, Cnvec+1, sizeof (int64_t)) ;\n"}},{"access1":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subassign_05.c","line":197,"snippet":" 195|        }\n 196|\n>197|        GB_PHASE1_TASK_WRAPUP ;\n 198|    }\n 199|\n","sourceLine":" 197|        GB_PHASE1_TASK_WRAPUP ;\n","stacktrace":[]},"access2":{"col":0,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subassign_05.c","line":197,"snippet":" 195|        }\n 196|\n>197|        GB_PHASE1_TASK_WRAPUP ;\n 198|    }\n 199|\n","sourceLine":" 197|        GB_PHASE1_TASK_WRAPUP ;\n","stacktrace":[]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_subassign_05.c","line":75,"sourceLine":" 75|    GB_SUBASSIGN_ONE_SLICE (M) ;\n"}},{"access1":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_emult_phase0.c","line":449,"snippet":" 447|            int64_t j = Ch [k] ;\n 448|            GB_lookup (true, Bh, Bp, &kB, Bnvec-1, j, &pB, &pB_end) ;\n>449|            C_to_B [k] = (pB < pB_end) ? kB : -1 ;\n 450|        }\n 451|    }\n","sourceLine":" 449|            C_to_B [k] = (pB < pB_end) ? kB : -1 ;\n","stacktrace":[".omp_outlined._debug__.4.993 [Source/GB_emult_phase0.c:444]"]},"access2":{"col":20,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_emult_phase0.c","line":449,"snippet":" 447|            int64_t j = Ch [k] ;\n 448|            GB_lookup (true, Bh, Bp, &kB, Bnvec-1, j, &pB, &pB_end) ;\n>449|            C_to_B [k] = (pB < pB_end) ? kB : -1 ;\n 450|        }\n 451|    }\n","sourceLine":" 449|            C_to_B [k] = (pB < pB_end) ? kB : -1 ;\n","stacktrace":[".omp_outlined._debug__.4.993 [Source/GB_emult_phase0.c:444]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_emult_phase0.c","line":431,"sourceLine":" 431|        GB_MALLOC_MEMORY (C_to_B, Cnvec, sizeof (int64_t)) ;\n"}},{"access1":{"col":9,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna.h","line":98,"snippet":" 96|            Sauna->Sauna_Mark [i] = 0 ;\n 97|        }\n>98|        Sauna->Sauna_hiwater = 1 ;\n 99|    }\n 100|\n","sourceLine":" 98|        Sauna->Sauna_hiwater = 1 ;\n","stacktrace":["RACETEST_THREAD [recreate_race.c:50]","GrB_mxm [recreate_race.c:36]","GB_mxm [Source/GrB_mxm.c:49]","GB_AxB_meta [Source/GB_mxm.c:113]","GB_AxB_saxpy_parallel [Source/GB_AxB_meta.c:377]",".omp_outlined._debug__.2.99 [Source/GB_AxB_saxpy_parallel.c:433]","GB_AxB_saxpy_sequential [Source/GB_AxB_saxpy_parallel.c:437]","GB_AxB_Gustavson [Source/GB_AxB_saxpy_sequential.c:103]","GB_AxB_Gustavson_builtin [Source/GB_AxB_Gustavson.c:236]","GB_AgusB__lor_ne_uint64 [Source/Template/GB_AxB_compare_factory.c:50]","GB_Sauna_reset.11486 [Source/Template/GB_AxB_Gustavson_mask.c:45]"]},"access2":{"col":26,"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna.h","line":89,"snippet":" 87|\n 88|    ASSERT (Sauna != NULL) ;\n>89|    Sauna->Sauna_hiwater += reset ;     // increment the Sauna_hiwater\n 90|\n 91|    if (Sauna->Sauna_hiwater + range <= 0 || reset == 0)\n","sourceLine":" 89|    Sauna->Sauna_hiwater += reset ;     // increment the Sauna_hiwater\n","stacktrace":["RACETEST_THREAD [recreate_race.c:51]","GrB_mxm [recreate_race.c:36]","GB_mxm [Source/GrB_mxm.c:49]","GB_AxB_meta [Source/GB_mxm.c:113]","GB_AxB_saxpy_parallel [Source/GB_AxB_meta.c:377]","GB_hcat_fine_slice [Source/GB_AxB_saxpy_parallel.c:513]","GB_Sauna_reset.1078 [Source/GB_hcat_fine_slice.c:374]"]},"sharedObj":{"dir":"/RedisGraph/deps/GraphBLAS","filename":"Source/GB_Sauna_alloc.c","line":33,"sourceLine":" 33|    GB_CALLOC_MEMORY (Sauna, 1, sizeof (struct GB_Sauna_struct)) ;\n"}}],"version":1};
verData={"Version":"0.1.0"};

