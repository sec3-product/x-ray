<?xml version="1.0" encoding="iso-2022-jp"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>prefork - Apache HTTP サーバ</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" />
<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body>
<div id="page-header">
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p>
<p class="apache">Apache HTTP サーバ バージョン 2.0</p>
<img alt="" src="../images/feather.gif" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">HTTP サーバ</a> &gt; <a href="http://httpd.apache.org/docs-project/">ドキュメンテーション</a> &gt; <a href="../">バージョン 2.0</a> &gt; <a href="./">モジュール</a></div>
<div id="page-content">
<div id="preamble"><h1>Apache MPM prefork</h1>
<table class="module"><tr><th><a href="module-dict.html#Description">説明:</a></th><td>スレッドを使わず、先行して fork を行なうウェブサーバを実装
</td></tr>
<tr><th><a href="module-dict.html#Status">ステータス:</a></th><td>MPM</td></tr>
<tr><th><a href="module-dict.html#ModuleIdentifier">モジュール識別子:</a></th><td>mpm_prefork_module</td></tr>
<tr><th><a href="module-dict.html#SourceFile">ソースファイル:</a></th><td>prefork.c</td></tr></table>
<h3>概要</h3>

    <p>このマルチプロセッシングモジュール (MPM) は、
    Unix 上での Apache 1.3 のデフォルトの挙動と非常によく似た方法で
    リクエストを処理する、スレッドを使わず、先行して fork を行なう
    ウェブサーバを実装しています。
    スレッドセーフでないライブラリとの互換性をとるために、
    スレッドを避ける必要のあるサイトでは、このモジュールの使用が適切でしょう。
    あるリクエストで発生した問題が他のリクエストに影響しないように、
    個々のリクエストを単離するのにも、最適な MPM です。</p>

    <p>この MPM は非常に自律的なので、この MPM の設定ディレクティブを
    調整する必要はほとんどないでしょう。もっとも重要なことは、
    <code class="directive"><a href="../mod/mpm_common.html#maxclients">MaxClients</a></code>
    が、予想される同時リクエスト数を十分扱えるぐらいは大きいけれども、
    全プロセスに十分な物理メモリが確実に行き渡る程度には小さい値にする、
    ということです。</p>

</div>
<div id="quickview"><h3 class="directives">ディレクティブ</h3>
<ul id="toc">
<li><img alt="" src="../images/down.gif" /> <a href="#acceptmutex">AcceptMutex</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#coredumpdirectory">CoreDumpDirectory</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#group">Group</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#listen">Listen</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#listenbacklog">ListenBacklog</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#lockfile">LockFile</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#maxclients">MaxClients</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#maxmemfree">MaxMemFree</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#maxrequestsperchild">MaxRequestsPerChild</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#maxspareservers">MaxSpareServers</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#minspareservers">MinSpareServers</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#pidfile">PidFile</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#scoreboardfile">ScoreBoardFile</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#sendbuffersize">SendBufferSize</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#serverlimit">ServerLimit</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#startservers">StartServers</a></li>
<li><img alt="" src="../images/right.gif" /> <a href="mpm_common.html#user">User</a></li>
</ul>
<h3>トピック</h3>
<ul id="topics">
<li><img alt="" src="../images/down.gif" /> <a href="#how-it-works">動作方法</a></li>
</ul><h3>参照</h3>
<ul class="seealso">
<li><a href="../bind.html">Apache
が使用するアドレスとポートの設定</a></li>
</ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="how-it-works" id="how-it-works">動作方法</a></h2>
    <p>一つのコントロールプロセスが、
    コネクションに対して listen して、しかるべき時に応答する
    子プロセスを起動します。Apache は常に幾つかの<dfn>スペア</dfn>
    かアイドルなサーバプロセスを維持していて、それらは入ってきた
    リクエストに応答できるように待機しています。
    このようにしてクライアントは、リクエストが応答される前に、
    新しい子プロセスが fork されるのを待たなくてもよいように
    なっています。</p>

    <p>親プロセスがリクエストに応答するの子プロセスを
    どのように生成するかは、
    <code class="directive"><a href="../mod/mpm_common.html#startservers">StartServers</a></code>,
    <code class="directive"><a href="#minspareservers">MinSpareServers</a></code>,
    <code class="directive"><a href="#maxspareservers">MaxSpareServers</a></code>,
    <code class="directive"><a href="../mod/mpm_common.html#maxclients">MaxClients</a></code>
    で調整します。一般的に、Apache は非常に自律的なので、
    大抵のサイトではこれらのディレクティブをデフォルト値から調整する
    必要はないでしょう。
    同時に 256 を超えるリクエストに応答しないといけないサイトでは、
    <code class="directive"><a href="../mod/mpm_common.html#maxclients">MaxClients</a></code>
    を増やす必要があるでしょう。
    一方、メモリの限られているサイトでは、スラッシング
    (メモリとディスク間で何度もスワップ) が起こるのを防ぐために
    <code class="directive"><a href="../mod/mpm_common.html#maxclients">MaxClients</a></code>
    を減らす必要があるでしょう。プロセス生成のチューニングに関する
    詳しい情報は、<a href="../misc/perf-tuning.html">性能に関するヒント</a>
    にあります。</p>

    <p>通常 Unix では親プロセスは 80 番ポートにバインドするために
    root で起動されますが、子プロセスやスレッドは
    もっと低い権限のユーザで Apache によって起動されます。
    <code class="directive"><a href="../mod/mpm_common.html#user">User</a></code> と
    <code class="directive"><a href="../mod/mpm_common.html#group">Group</a></code>
    ディレクティブは
    Apache の子プロセスの権限を設定するのに用いられます。
    子プロセスはクライアントに送るコンテンツ全てを読めないといけませんが、
    可能な限り必要最小限の権限のみを持っているようにするべきです。</p>

    <p><code class="directive"><a href="../mod/mpm_common.html#maxrequestsperchild">MaxRequestsPerChild</a></code>
    は、古いプロセスを停止して新しいプロセスを起動することによって、
    どの程度の頻度でサーバがプロセスをリサイクルするかを制御します。</p>
</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="AcceptMutex" id="AcceptMutex">AcceptMutex</a> <a name="acceptmutex" id="acceptmutex">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>複数の子プロセスがネットワークソケットでリクエストを
accept しようとしているときに、Apache がそれらの子プロセスを直列化するために
使う方法</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>AcceptMutex default|<var>method</var></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>AcceptMutex default</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>MPM</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>prefork</td></tr>
</table>
    <p><code class="directive">AcceptMutex</code> ディレクティブは、
    ネットワークソケットのリクエストを accept しようとしている複数の子プロセスを
    Apache が直列化するために使う方法を設定します。
    Apache 2.0 より前では、このメソッドはコンパイル時にのみ選択できました。
    最適な方法は、アーキテクチャやプラットホームに大きく依存します。
    詳細に関しては、<a href="../misc/perf-tuning.html">性能のチューニング</a>
    ドキュメントをご覧下さい。</p>

    <p>このディレクティブが <code>default</code>
    に設定されていれば、コンパイル時に選択されたデフォルト値が使われます。
    他の使用可能なメソッドの一覧は下にあります。
    全てのメソッドが全てのプラットホームで使用可能であるわけではない、
    ということに注意してください。
    使用可能でないメソッドが指定された場合は、
    使用可能なメソッドの一覧を含んだメッセージが
    エラーログに出力されます。</p>

    <dl>
      <dt><code>flock</code></dt>

      <dd><code class="directive"><a href="../mod/mpm_common.html#lockfile">LockFile</a></code>
      ディレクティブで定義したファイルのロックに、
      <code>flock(2)</code> システムコールを使います。</dd>

      <dt><code>fcntl</code></dt>

      <dd><code class="directive"><a href="../mod/mpm_common.html#lockfile">LockFile</a></code>
      ディレクティブで定義したファイルのロックに、
      <code>fnctl(2)</code> システムコールを使います。</dd>

      <dt><code>sysvsem</code></dt>

      <dd>排他処理の実装に SysV 形式のセマフォを使います。</dd>

      <dt><code>pthread</code></dt>

      <dd>POSIX Threads (PThreads) 規格で実装されている
      POSIX 排他処理を使います。</dd>
    </dl>

</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="MaxSpareServers" id="MaxSpareServers">MaxSpareServers</a> <a name="maxspareservers" id="maxspareservers">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>アイドルな子サーバプロセスの最大個数</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>MaxSpareServers <var>number</var><br /></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>MaxSpareServers 10</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>MPM</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>prefork</td></tr>
</table>
    <p><code class="directive">MaxSpareServers</code> ディレクティブは、
    <em>アイドルな</em>子サーバプロセスの希望最大個数を設定します。
    アイドルプロセスとは、リクエストを扱っていないプロセスです。
    MaxSpareServers よりも多い数がアイドルであれば、
    親プロセスは超過プロセスを kill します。</p>

    <p>非常に混んでいるサイトでのみ、このパラメータをチューニングするべきです。
    このパラメータを大きくするということは、大抵の場合は悪い発想です。</p>

<h3>参照</h3>
<ul>
<li><code class="directive"><a href="#minspareservers">MinSpareServers</a></code></li>
<li><code class="directive"><a href="../mod/mpm_common.html#startservers">StartServers</a></code></li>
</ul>
</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="MinSpareServers" id="MinSpareServers">MinSpareServers</a> <a name="minspareservers" id="minspareservers">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>アイドルな子サーバプロセスの最小個数</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>MinSpareServers <var>number</var></code></td></tr>
<tr><th><a href="directive-dict.html#Default">デフォルト:</a></th><td><code>MinSpareServers  5</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>MPM</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>prefork</td></tr>
</table>
    <p><code class="directive">MaxSpareServers</code> ディレクティブは、
    <em>アイドルな</em>子サーバプロセスの希望最小個数を設定します。
    アイドルプロセスとは、リクエストを扱っていないプロセスです。
    MinSpareServers よりも少ない数がアイドルであれば、
    親プロセスは最高で 1 秒につき 1 個の割合で新しい子プロセスを生成します。</p>

    <p>非常に混んでいるサイトでのみ、このパラメータをチューニングするべきです。
    このパラメータを大きくするということは、大抵の場合は悪い発想です。</p>

<h3>参照</h3>
<ul>
<li><code class="directive"><a href="#maxspareservers">MaxSpareServers</a></code></li>
<li><code class="directive"><a href="../mod/mpm_common.html#startservers">StartServers</a></code></li>
</ul>
</div>
</div>
<div id="footer">
<p class="apache">Maintained by the <a href="http://httpd.apache.org/docs-project/">Apache HTTP Server Documentation Project</a></p>
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p></div>
</body></html>