<?xml version='1.0' encoding='EUC-KR' ?>
<!DOCTYPE manualpage SYSTEM "./style/manualpage.dtd">
<?xml-stylesheet type="text/xsl" href="./style/manual.ko.xsl"?>
<!-- English revision: 1.5.2.2 -->
<manualpage metafile="configuring.xml.meta">

  <title>설정파일</title>

<summary>
<p>이 문서는 아파치 웹서버를 설정하는 파일들을 설명한다.</p>
</summary>

  <section id="main">
    <title>주설정파일</title>
    <related>
      <modulelist>
        <module>mod_mime</module>
      </modulelist>
      <directivelist>
        <directive module="core" type="section">IfDefine</directive>
        <directive module="core">Include</directive>
        <directive module="mod_mime">TypesConfig</directive>
      </directivelist>
    </related>

    <p>일반 문서 파일인 설정파일에 <a
    href="mod/directives.html">지시어</a>를 사용하여 아파치를
    설정한다. 주설정파일을 보통 <code>httpd.conf</code>라고
    부른다. 이 파일의 위치는 컴파일시 정해지나, <code>-f</code>
    명령행 옵션으로 지정해줄 수 있다. 또 다른 설정파일을 <directive
    module="core">Include</directive> 지시어를 사용하여 포함할
    수 있고, 와일드카드를 사용하여 많은 설정파일을 포함할 수도
    있다. 이 경우 지시어를 어떤 설정파일에나 사용해도 된다.
    주설정파일을 수정하면 아파치를 시작하거나 재시작한 이후에
    반영된다.</p>

    <p>서버는 mime 문서타입을 담은 파일도 읽는다. 파일명은
    <directive module="mod_mime">TypesConfig</directive> 지시어로
    설정하고, 기본값은 <code>mime.types</code>이다.</p>
  </section>

  <section id="syntax">
    <title>설정파일 문법</title>

    <p>아파치 설정파일은 한줄에 한 지시어를 사용한다. 줄 마지막
    문자가 백슬래쉬 "\"이면 지시어가 다음 줄에서 계속됨을 뜻한다.
    이 경우 백슬래쉬 뒤에 어떤 문자나 공백도 나오면 안된다.</p>

    <p>설정파일의 지시어는 대소문자를 구별하지 않지만, 지시어의
    아규먼트는 대소문자를 구별하는 경우가 있다. 해쉬문자 "#"로
    시작하는 줄은 주석으로 무시한다. 주석을 설정 지시어와 같은
    줄에 사용할 수 <strong>없다</strong>. 빈줄과 지시어 앞에 나오는
    공백은 무시하므로, 간결하게 보이도록 지시어를 줄들임할(indent)
    수 있다.</p>

    <p><code>apachectl configtest</code>나 <code>-t</code> 명령행
    옵션을 사용하여 아파치를 실행하지 않고도 설정파일의 문법
    오류를 검사할 수 있다.</p>
  </section>

  <section id="modules">
    <title>모듈</title>

    <related>
      <modulelist>
        <module>mod_so</module>
      </modulelist>
      <directivelist>
        <directive module="core" type="section">IfModule</directive>
        <directive module="mod_so">LoadModule</directive>
      </directivelist>
    </related>

    <p>아파치는 모듈화된 서버다. 이는 매우 기본적인 기능만이
    서버 핵심에 포함되있음을 뜻한다. 아파치는 <a
    href="mod/">모듈</a>을 읽어들여서 기능을
    확장한다. 기본적으로 컴파일하면 서버에 <a
    href="mod/module-dict.html#Status">base</a> 모듈들이 포함된다.
    서버를 <a href="dso.html">동적으로 읽어들이는</a> 모듈을
    사용할 수 있게 컴파일하였다면 모듈을 따로 컴파일하여 아무때나
    <directive module="mod_so">LoadModule</directive> 지시어로
    추가할 수 있다. 그렇지 않으면 모듈을 추가하거나 빼기위해
    아파치를 다시 컴파일해야 한다. 설정 지시어를 <directive
    module="core">IfModule</directive> 블록으로 감싸서 특정
    모듈이 있는 경우에만 선택적으로 처리할 수 있다.</p>

    <p>현재 서버에 어떤 모듈이 컴파일되있는지 보려면 <code>-l</code>
    명령행 옵션을 사용한다.</p>
  </section>

  <section id="scope">
    <title>지시어 적용범위</title>

    <related>
      <directivelist>
        <directive module="core" type="section">Directory</directive>
        <directive module="core" type="section">DirectoryMatch</directive>
        <directive module="core" type="section">Files</directive>
        <directive module="core" type="section">FilesMatch</directive>
        <directive module="core" type="section">Location</directive>
        <directive module="core" type="section">LocationMatch</directive>
        <directive module="core" type="section">VirtualHost</directive>
      </directivelist>
    </related>

    <p>주설정파일에 있는 지시어는 서버 전체에 적용된다. 지시어가
    서버의 일부에만 적용되게 하려면 지시어를 <directive module="core"
    type="section">Directory</directive>, <directive module="core"
    type="section">DirectoryMatch</directive>, <directive module="core"
    type="section">Files</directive>, <directive module="core"
    type="section">FilesMatch</directive>, <directive module="core"
    type="section">Location</directive>, <directive module="core"
    type="section">LocationMatch</directive> 섹션 안에 두어야한다.
    이 섹션들은 그들이 감싸는 지시어의 적용범위를 파일시스템이나
    URL의 특정 위치로 한정한다. 또, 서로 겹쳐서 사용할 수 있기때문에
    매우 세밀한 설정이 가능하다.</p>

    <p>아파치는 여러 다른 웹사이트를 동시에 서비스하는
    능력이 있다. 이를 <a href="vhosts/">가상호스트</a>라고 한다.
    지시어를
    <directive module="core" type="section">VirtualHost</directive>
    섹션 안에 두어 특정 웹사이트에만 지시어를 적용할 수 있다.</p>

    <p>지시어는 대부분 어떤 섹션에 나와도 되지만, 어떤 지시어는
    특정 장소에서 의미가 없다. 예를 들어 프로세스 생성을 조절하는
    지시어는 주서버설정 장소에서만 사용할 수 있다. 지시어가
    어떤 섹션에 위치할 수 있는지 알려면 지시어의 <a
    href="mod/directive-dict.html#Context">사용장소</a>를 확인하라.
    더 자세한 정보는 <a href="sections.html">어떻게 Directory,
    Location, Files 섹션이 동작하나</a>를 참고하라.</p>
  </section>

  <section id="htaccess">
    <title>.htaccess 파일</title>

    <related>
      <directivelist>
        <directive module="core">AccessFileName</directive>
        <directive module="core">AllowOverride</directive>
      </directivelist>
    </related>

    <p>아파치는 특별한 파일을 사용하여 설정을
    나눠서(분권적으로) 관리할 수 있다. 이 특별한 파일을 보통
    <code>.htaccess</code>라고 부르지만, 이름은 <directive
    module="core">AccessFileName</directive> 지시어로
    지정할 수 있다. <code>.htaccess</code> 파일에 있는 지시어는
    파일이 있는 디렉토리와 모든 하위디렉토리에 적용된다.
    <code>.htaccess</code> 파일은 주설정파일과 같은 문법을
    따른다. <code>.htaccess</code> 파일은 매 요청때마다 읽기때문에
    파일을 수정하면 즉시 효과를 볼 수 있다.</p>

    <p>어떤 지시어를 <code>.htaccess</code> 파일에 사용할 수
    있는지 알려면 지시어의 <a
    href="mod/directive-dict.html#Context">사용장소</a>를
    확인하라. 서버 관리자는 주설정파일의 <directive
    module="core">AllowOverride</directive> 지시어로
    <code>.htaccess</code> 파일에 어떤 지시어를 사용할 수 있는지
    조절할 수 있다.</p>

    <p><code>.htaccess</code> 파일에 대한 더 자세한 정보는
    <a href="howto/htaccess.html">.htaccess 투토리얼</a>을
    참고하라.</p>
  </section>
</manualpage>
