<?xml version="1.0" encoding="KOI8-R"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>Компилирование и установка - HTTP сервер Apache</title>
<link href="./style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="./style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="./style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" />
<link href="./images/favicon.ico" rel="shortcut icon" /></head>
<body id="manual-page"><div id="page-header">
<p class="menu"><a href="./mod/">Модули</a> | <a href="./mod/directives.html">Директивы</a> | <a href="./faq/">FAQ</a> | <a href="./glossary.html">Глоссарий</a> | <a href="./sitemap.html">Карта сайта</a></p>
<p class="apache">HTTP сервер Apache Версия 2.0</p>
<img alt="" src="./images/feather.gif" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="./images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">HTTP сервер</a> &gt; <a href="http://httpd.apache.org/docs-project/">Документация</a> &gt; <a href="./">Версия 2.0</a></div><div id="page-content"><div id="preamble"><h1>Компилирование и установка</h1>

    <p>Этот документ освещает вопросы компилирования и установки сервера
    Apache только на UNIX и UNIX-подобных системах. Если вы хотите установить
    сервер под Windows, то вам необходимо прочесть документ <a href="platform/windows.html">"Использование Apache под Microsoft Windows"</a>.
    Информация, касающаяся остальных платформ, содержится в документе
    <a href="platform/">"Платформы"</a>.</p>

    <p>Среда конфигурирования и установки сервера полностью отличается от той, которая была
    в Apache 1.3. Apache 1.3 использовал обычный набор скриптов, позволявший упростить
    процесс установки. Apache 2.0 теперь использует системы <code>libtool</code> и
    <code>autoconf</code>, что делает сервер похожим на другие программные продукты
    с открытым исходным кодом (Open Source projects).</p>

</div>
<div id="quickview"><ul id="toc"><li><img alt="" src="./images/down.gif" /> <a href="#overview">Краткий обзор "для нетерпеливых"</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#requirements">Требования</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#download">Загрузка</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#extract">Распаковка</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#configure">Конфигурирование дерева исходных кодов</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#compile">Сборка</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#install">Установка</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#customize">Настройка</a></li>
<li><img alt="" src="./images/down.gif" /> <a href="#test">Тестирование</a></li>
</ul><h3>См. также</h3><ul class="seealso"><li><a href="invoking.html">Запуск сервера</a></li><li><a href="stopping.html">Остановка и перезапуск</a></li></ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="overview" id="overview">Краткий обзор "для нетерпеливых"</a></h2>

    <table>
      <tr>
        <td><a href="#download">Загрузка</a></td>

        <td><code>$ lynx
        http://www.apache.org/dist/httpd/httpd-2_0_<em>NN</em>.tar.gz</code>
        </td>
      </tr>

      <tr>
        <td><a href="#extract">Распаковка</a></td>

        <td><code>$ gzip -d httpd-2_0_<em>NN</em>.tar.gz<br />
         $ tar xvf httpd-2_0_<em>NN</em>.tar</code> </td>
      </tr>

      <tr>
        <td><a href="#configure">Конфигурирование</a></td>

        <td><code>$ ./configure --prefix=<em>PREFIX</em></code>
        </td>
      </tr>

      <tr>
        <td><a href="#compile">Компилирование</a></td>

        <td><code>$ make</code> </td>
      </tr>

      <tr>
        <td><a href="#install">Установка</a></td>

        <td><code>$ make install</code> </td>
      </tr>

      <tr>
        <td><a href="#customize">Настройка</a></td>

        <td><code>$ vi <em>PREFIX</em>/conf/httpd.conf</code> </td>
      </tr>

      <tr>
        <td><a href="#test">Пробный запуск</a></td>

        <td><code>$ <em>PREFIX</em>/bin/apachectl start</code>
        </td>
      </tr>
    </table>

    <p><em>NN</em> необходимо заменить на текущий младший номер версии,
    а вместо <em>PREFIX</em> надо указать путь, по
    которому должен быть установлен сервер. Если <em>PREFIX</em> не указан,
    то установка по умолчанию производится в каталог
    <code>/usr/local/apache2</code>.</p>

    <p>Более подробно все этапы компилирования и установки сервера рассмотрены
    ниже, причем начинается следующий раздел с описания системных требований,
    необходимых, для того чтобы установка прошла успешно.</p>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="requirements" id="requirements">Требования</a></h2>

    <p>Требования, необходимые для успешной сборки сервера:</p>

    <dl>
      <dt>Дисковое пространство</dt>
      <dd>Убедитесь, что на диске есть как мининимум 50 MB
      свободного места для временных файлов. После установки
      Apache занимает приблизительно 10 MB. Точный размер занимаемого
      места будет зависеть в основном от выбранной конфигурации и
      дополнительно устанавливаемых модулей, не входящих в дистрибутив
      Apache.</dd>

      <dt>ANSI-C компилятор и необходимая среда сборки</dt>
      <dd>Убедитесь, что на вашей системе установлен ANSI-C
      компилятор. Рекомендуется использовать <a href="http://www.gnu.org/software/gcc/gcc.html">GNU C
      компилятор (GCC)</a> от <a href="http://www.gnu.org/">Free Software Foundation (FSF)</a>
      (версии 2.7.2 вполне достаточно). Если у вас другой компилятор,
      то выясните, поддерживает ли он стандарт ANSI. Проверьте также,
      чтобы в переменной окружения <code>PATH</code> был указан каталог,
      содержащий основные утилиты, необходимые для сборки (<code>make</code> и другие).</dd>

      <dt>Синхронизация времени</dt>
      <dd>В некоторых заголовках HTTP протокола указывается время.
      Поэтому вам необходимо выяснить, как можно установить в вашей
      системе средство синхронизации времени. Обычно для этих целей
      используются программы <code>ntpdate</code> или <code>xntpd</code>,
      основанные на сетевом протоколе синхронизации времени
      (Network Time Protocol - NTP). Для получения более подробной информации
      об NTP и серверах синхронизации времени, обратитесь в группу новостей Usenet <a href="news:comp.protocols.time.ntp">comp.protocols.time.ntp</a>,
      а также посетите <a href="http://www.eecis.udel.edu/~ntp/">домашнюю страницу NTP</a></dd>

      <dt><a href="http://www.perl.org/">Perl 5</a>
      [НЕОБЯЗАТЕЛЬНО]</dt>
      <dd>Для выполнения некоторых вспомогательных скриптов, таких как <a href="programs/apxs.html">apxs</a> или <a href="programs/dbmmanage.html">dbmmanage</a>
      (которые написаны на Perl), необходим интерпретатор с языка Perl
      (версии 5.003 или выше достаточно). Если конфигурационный скрипт
      `<code>configure</code>' не найдет его в вашей системе, то вы все равно
      сможете собрать и установить Apache 2.0 - в этом случае не будут
      работать только перечисленные выше вспомогательные скрипты. Если в вашей
      системе установлено несколько интерпретаторов с языка Perl (например Perl 4 и Perl 5),
      то для того чтобы скрипт <code>./configure</code> выбрал нужный, выполните
      его с опцией <code>--with-perl</code> (описание смотрите ниже).</dd>
    </dl>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="download" id="download">Загрузка</a></h2>

    <p>Apache можно загрузить со <a href="http://httpd.apache.org/download.cgi">страницы загрузки Apache HTTP Software
    Foundation</a>, на которой также приводится список некоторых зеркальных серверов.
    Здесь вы найдете самую последнюю стабильную версию сервера.</p>

    <p>После загрузки, особенно если она происходила с зеркального
    сервера, необходимо убедиться, что у вас в руках полная,
    неизмененная версия HTTP сервера Apache. Это выполняется
    тестированием архива (tarball) на соответствие PGP подписи, что является, в
    свою очередь, двушаговой процедурой. Во-первых, вы должны
    загрузить файл <code>KEYS</code> со <a href="http://www.apache.org/dist/httpd/">страницы загрузки
    Apache Software Foundation</a>. (Для того чтобы быть уверенным в том,
    что сам файл <code>KEYS</code> не был изменен, его лучше взять из
    предыдущего дистрибутива Apache или взять с сервера
    открытых ключей.) Затем ключи можно импортировать в вашу личную базу
    данных ключей посредством следующих команд (в зависимости от
    версии pgp):</p>

<div class="example"><p><code>$ pgp &lt; KEYS</code></p></div>

    <p>или </p>

<div class="example"><p><code>$ gpg --import KEYS</code></p></div>

    <p>Следующий шаг заключается в непосредственной проверке
    архива (tarball) с использованием PGP подписи, которую всегда
    надо брать на <a href="http://www.apache.org/dist/httpd/">основном
    веб-сервере Apache</a>. Файл с PGP подписью имеет то же имя, что
    и архив дистрибутива плюс окончание <code>.asc</code>. Проверить
    дистрибутив можно, набрав следующие команды (опять же, это зависит
    от версии pgp, установленного в вашей системе):</p>

<div class="example"><p><code>$ pgp httpd-2_0_<em>NN</em>.tar.gz.asc</code></p></div>

    <p>или</p>

<div class="example"><p><code>$ gpg --verify httpd-2_0_<em>NN</em>.tar.gz.asc</code></p></div>

    <p>Вы должны увидеть что-то вроде:</p>

<div class="example"><p><code>Good signature from user "Martin Kraemer
      &lt;martin@apache.org&gt;".</code></p></div>

    <p>В зависимости от доверительных отношений, содержащихся в вашей
    базе данных ключей, вы можете также получить сообщение о том,
    что отношение между ключем и тем, кто им подписался, невозможно
    установить. Это не должно вас беспокоить в том случае, если
    вы уверены в подлинности файла <code>KEYS</code>.</p>

</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="extract" id="extract">Распаковка</a></h2>

    <p>Распаковка архива исходных кодов Apache HTTP сервера
    заключается в его непосредственной распаковке и
    разархивировании (untarring):</p>

<div class="example"><p><code>
      $ gzip -d httpd-2_0_<em>NN</em>.tar.gz<br />
       $ tar xvf httpd-2_0_<em>NN</em>.tar
</code></p></div>

    <p>После выполнения этих команд будет создан новый каталог
    с исходными кодами дистрибутива. Вы должны зайти
    в этот каталог, прежде чем начнете компилировать сервер.</p>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="configure" id="configure">Конфигурирование дерева исходных кодов</a></h2>

    <p>Следующий шаг заключается в конфигурировании дерева исходных
    кодов в соответствии с той системой, на которую вы устанавливаете
    сервер, и вашими собственными нуждами. Это делается при помощи
    скрипта <code>configure</code>, расположенного в корневом каталоге
    дистрибутива. Разработчики, загружающие дерево исходных кодов посредством
    CVS, должны установить в своей системе утилиты <code>autoconf</code>
    и <code>libtool</code> и выполнить программу <code>buildconf</code>, прежде
    чем они смогут продолжнить установку. В официальных выпусках сервера
    этого делать не требуется.</p>

    <p>Для конфигурирования дерева исходных кодов, с использованием
    значений всех опций по умолчанию, просто выполните скрипт <code>./configure</code>
    без параметров. Для того чтобы изменить значения опций, скрипт <code>configure</code>
    предлагает широкий набор переменных и опций командной строки. При этом
    переменные окружения помещаются перед командой <code>./configure</code>, в то время как
    остальные опции - после. Наиболее важная опция здесь - это префикс каталога
    установки, то есть тот путь, по которому впоследствии будет установлен Apache.
    Но помимо этой существует еще большой выбор опций, необходимых для тонкой настройки
    сервера.</p>

    <p>Для того чтобы получить представление о гибкости процесса конфигурирования Apache,
    рассмотрите приведенный ниже типичный пример запуска скрипта <code>./configure</code>.
    Такая конфигурация позволяет компилировать
    сервер в каталог <code>/sw/pkg/apache</code>, используя указанный компилятор с
	несколькими предназначенными для него опциями командной строки, и установить
	еще два добавочных модуля <code class="module"><a href="./mod/mod_rewrite.html">mod_rewrite</a></code> и <code class="module"><a href="./mod/mod_speling.html">mod_speling</a></code>,
    которые можно будет потом использовать посредством механизма DSO.</p>

<div class="example"><p><code>
      $ CC="pgcc" CFLAGS="-O2" \<br />
       ./configure --prefix=/sw/pkg/apache \<br />
       --enable-rewrite=shared \<br />
       --enable-speling=shared
</code></p></div>

    <p>При выполнении, скрипт <code>configure</code> проверяет, установлено ли в вашей системе
    все необходимое, а затем создает Make-файлы (Makefiles), которые будут затем использованы
    при компилировании сервера.</p>

    <p>Наиболее простой способ узнать обо всех доступных конфигурационных опциях - это
    выполнить команду <code>./configure --help</code>. На экран будет выведено краткое
    описание практически всех доступных опций и переменных окружения.</p>

<h3><a name="environment" id="environment">Переменные окружения</a></h3>

    <p>Программа <code>autoconf</code> использует ряд переменных окружения для конфигурирования
    среды сборки. Вообще, посредством этих переменных можно изменить лишь метод сборки сервера -
    контролировать включение и выключение дополнительных опций сервера этим невозможно. Эти
    переменные можно включить в среду до вызова скрипта <code>configure</code>, но проще всего
    это сделать так, как было показано в примере выше.</p>

    <dl>
      <dt><code>CC=...</code></dt>

      <dd>Команда вызова компилятора с языка C</dd>

      <dt><code>CPPFLAGS=...</code></dt>

      <dd>Дополнительные опции препроцессора и компилятора с языка C.</dd>

      <dt><code>CFLAGS=...</code></dt>

      <dd>Опции отладки и оптимизации компилятора с языка C.</dd>

      <dt><code>LDFLAGS=...</code></dt>

      <dd>Дополнительные опции для компоновщика.</dd>

      <dt><code>LIBS=...</code></dt>

      <dd>Информация о расположении библиотек (опции "<code>-L</code>" и
      "<code>-l</code>"), передаваемая компоновщику.</dd>

      <dt><code>INCLUDES=...</code></dt>

      <dd>Пути, по которым ищутся заголовочные файлы. ("<code>-I<em>dir</em></code>").</dd>

      <dt><code>TARGET=...</code> [По умолчанию: <code>apache</code>]</dt>

      <dd>Имя исполняемого файла после сборки сервера</dd>

      <dt><code>NOTEST_CPPFLAGS=...</code></dt>

      <dt><code>NOTEST_CFLAGS=...</code></dt>

      <dt><code>NOTEST_LDFLAGS=...</code></dt>

      <dt><code>NOTEST_LIBS=...</code></dt>

      <dd>Эти переменные окружения выполняют ту же роль, что и те же самые переменные,
      но без приставки <code>NOTEST</code>. Разница заключается в том, что они добавляются
      в среду после того, как autoconf выполнил тестирование возможностей операционной
      среды. Это позволяет использовать те опции, которые бы вызвали ошибку при подобном
      тестировании, но включение которых обязательно для окончательной сборки сервера.</dd>

      <dt><code>SHLIB_PATH=...</code></dt>

      <dd>Опции компилятора и компоновщика, определяющие путь к разделяемым библиотекам.</dd>
    </dl>


<h3><a name="output" id="output">Опции, конфигурирующие выходной поток программы autoconf</a></h3>

    <dl>
      <dt><code>--help</code></dt>

      <dd>Выдает инструкцию по использованию программы, включая все возможные опции, после
      чего сразу же завершает работу.</dd>

      <dt><code>--quiet</code></dt>

      <dd>Предотвращает вывод сообщений, начинающихся с "<code>checking...</code>"</dd>

      <dt><code>--verbose</code></dt>

      <dd>Выдает полную информацию в процессе конфигурирования, включая имена
      проверяемых файлов.</dd>
    </dl>


<h3><a name="pathnames" id="pathnames">Пути</a></h3>

    <p>В настоящее время существуют два способа задания путей, по которым
    Apache установит свои файлы. Первый способ - это явно указать Apache
    каталог, по которому он установится.</p>

    <dl>
      <dt><code>--prefix=<em>PREFIX</em></code> [По умолчанию:
      <code>/usr/local/apache2</code>]</dt>

      <dd>Определяет путь, по которому будет произведена установка Apache.</dd>
    </dl>

    <p>Более того, существует возможность установить архитектурно - зависимые файлы
    в другой специально заданный каталог.</p>

    <dl>
      <dt><code>--exec-prefix=<em>EPREFIX</em></code> [Default:
      <code><em>PREFIX</em></code>]</dt>

      <dd>Определяет путь, по которому будут установлены архитектурно - зависимые
      файлы.</dd>
    </dl>

    <p>Второй способ является более гибким. Он заключается в использовании
    файлов <code>config.layout</code>. Используя этот метод, можно указать
    каталог установки для любого типа файлов Apache. Файл <code>config.layout</code>
    содержит несколько примеров конфигурирования. Используя эти примеры, вы можете
    сами создавать собственные конфигурации установки.
	Различные макеты установок группируются
    в раздельных секциях <code>&lt;Layout FOO&gt;...&lt;/Layout&gt;</code>, после чего
    к ним можно обращаться посредством имени <code>FOO</code>.</p>

    <dl>
      <dt><code>--enable-layout=<em>LAYOUT</em></code></dt>

      <dd>Использует именованный макет, описанный в файле <code>config.layout</code>,
      в котором прописаны все установочные пути.</dd>
    </dl>



<h3><a name="modules" id="modules">Модули</a></h3>

    <p>Apache - это модульный сервер. Только самые основные
    функции включены в ядро сервера. Дополнительная функциональность
    доступна посредством модулей. Во время процесса конфигурации
    вы должны выбрать те модули, которые будут компилироваться вместе с сервером.
    Обо всех доступных модулях вы можете прочитать в соответствующем
    <a href="mod/index.html">списке модулей</a>. Модули, <a href="mod/module-dict.html#Status">статус</a> которых обозначен
    как "Базовый", компилируются вместе с сервером по умолчанию; если вам
    не нужны некоторые базовые модули, вы должны специально это указать при
    конфигурации (базовым модулем, например, является <code class="module"><a href="./mod/mod_userdir.html">mod_userdir</a></code>).
    Модули с другим статусом не компилируются вместе с сервером по умолчанию, и (в случае
    необходимости) должны быть прописаны при конфигурировании отдельно (примером такого модуля
	может послужить <code class="module"><a href="./mod/mod_expires.html">mod_expires</a></code>).</p>

    <p>Есть два способа указать Apache использовать какой - либо модуль. Модули
    могут быть скомпилированы как <em>статические</em>, при этом их код включается
    непосредственно в исполняемый код сервера Apache. Или же, если ваша операционная
    система поддерживает динамически разделяемые объекты (Dynamic Shared Objects) и
    и <code>autoconf</code> может определить, что это так, то модули могут быть
    скомпилированы как <em>динамические</em>. DSO модули хранятся отдельно от ядра
    сервера, и могут использоваться сервером в зависимости от
    конфигурационных директив времени выполнения (то есть отвечающих за работу
    уже собранного сервера), предоставляемых модулем <code class="module"><a href="./mod/mod_so.html">mod_so</a></code>.
    Модуль mod_so автоматически включается в ядро сервера, если хотя бы
    один модуль компилируется как динамический. Если же вы не компилируете никакие
    динамические модули, но хотите, чтобы ваш сервер все же был способен работать
    с DSO модулями, то при конфигурировании укажите следующую опцию: <code>--enable-so</code>.</p>

    <dl>
      <dt><code>--enable-<em>MODULE</em>[=shared]</code></dt>

      <dd>Компилировать и включить в ядро сервера модуль <em>MODULE</em>.
      <em>MODULE</em> - это <a href="mod/module-dict.html#ModuleIdentifier">идентификатор модуля</a>, который можно
      получить, отбросив от имени модуля, указанного в документации, строку "_string". Чтобы
      компилировать модуль как DSO, добавьте опцию <code>=shared</code>.</dd>

      <dt><code>--disable-<em>MODULE</em></code></dt>

      <dd>Убрать <em>MODULE</em> из списка компилируемых модулей (если он есть в этом списке).</dd>

      <dt><code>--enable-modules=<em>MODULE-LIST</em></code></dt>

      <dd>Компилировать и включить в ядро сервера модули, идентификаторы которых приведены в
      списке <em>MODULE-LIST</em>. Элементы списка отделяются друг от друга пробелами.</dd>

      <dt>
      <code>--enable-mods-shared=<em>MODULE-LIST</em></code></dt>

      <dd>Компилировать модули, идентификаторы которых приведены в
      списке <em>MODULE-LIST</em>, как динамические.</dd>
    </dl>

    <p>Например, чтобы включить в сервер модули <code class="module"><a href="./mod/mod_dav.html">mod_dav</a></code> и
    <code class="module"><a href="./mod/mod_info.html">mod_info</a></code>, вы можете использовать либо</p>

<div class="example"><p><code>./configure --enable-dav --enable-info</code></p></div>

    <p>либо эквивалентную предыдущей команду</p>

<div class="example"><p><code>./configure --enable-modules="dav info"</code></p></div>

    <p>В дополнение к этому существуют специальные ключевые слова <code>all</code> или
    <code>most</code>, которые могут быть использованы для компилирования всех или большинства
    модулей сразу. Вы можете исключить из этого списка нежелательные модули, применяя соответствующие
    опции <code>--disable-<em>MODULE</em></code>. Например, для того чтобы включить в работу сервера все
    модули как DSO за исключением <code class="module"><a href="./mod/mod_info.html">mod_info</a></code>, вы можете написать следующее</p>

<div class="example"><p><code>
      ./configure --enable-mods-shared=all
      --disable-info
</code></p></div>

    <p>В добавление к стандартному набору модулей, Apache 2.0 компилируется
    вместе с некоторым <a href="mpm.html">мульти - процессным модулем</a> (MPMs).
    Один и только один МП - модуль может быть скомпилирован вместе с сервером. Список
    МП - модулей, компилируемых по умолчанию для каждой платформы, можно найти в соответствующем
    <a href="mpm.html">разделе документации</a>; МП - модуль по умолчанию
    можно изменить следующей опцией командной строки <code>configure</code></p>

    <dl>
      <dt><code>--with-mpm=<em>NAME</em></code></dt>

      <dd>Компилироваться вместе с сервером будет МП - модуль с именем <em>NAME</em>.</dd>
    </dl>


<h3><a name="dbm" id="dbm">DBM</a></h3>

    <p>Некоторые модули Apache, как например <code class="module"><a href="./mod/mod_auth_dbm.html">mod_auth_dbm</a></code> и <code class="module"><a href="./mod/mod_rewrite.html">mod_rewrite</a></code>
    (директива <code class="directive"><a href="./mod/mod_rewrite.html#rewritemap">RewriteMap</a></code>), используют в своей работе простые
    базы данных, организованные по принципу ключ/значение, что увеличивает скорость доступа к информации.
    Поддержка SDBM баз данных включена в ядро сервера, так что использование баз данных подобного типа возможно
    всегда. Если вам нужны базы данных другого типа, то можете использовать следующие опции:</p>

<dl>
<dt><code>--with-gdbm[=<em>path</em>]</code></dt>
<dt><code>--with-ndbm[=<em>path</em>]</code></dt>
<dt><code>--with-berkeley-db[=<em>path</em>]</code></dt>

<dd>Если не указано значение <em>path</em>, Apache будет искать заголовочные файлы и библиотеки
в стандартных каталогах. Явное указание <em>path</em> заставит Apache производить поиск соответсвующих
файлов в каталогах <em>path</em><code>/lib</code> и <em>path</em><code>/include</code>. Можно также
указать специфические пути для заголовочных файлов и библиотек, написав их через точку с запятой.</dd>
</dl>



<h3><a name="suexec" id="suexec">Suexec</a></h3>

    <p>Вместе с Apache можно найти вспомогательную программу <a href="suexec.html">suexec</a>, которая позволяет установить
    более жесткий контроль над выполнением пользовательских CGI
    программ. Тем не менее, если suexec сконфигурировать неправильно,
    то могут появиться значительные бреши в системе безопасности
    сервера. Поэтому вы должны очень внимательно прочитать <a href="suexec.html">документацию
    suexec</a>, если решите использовать эту программу.</p>

</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="compile" id="compile">Сборка</a></h2>

    <p>Теперь вы можете скомпилировать и собрать сервер Apache,
    выполнив следующую команду:</p>

<div class="example"><p><code>$ make</code></p></div>

    <p>Наберитесь терпения - компилирование сервера с базовой конфигурацией
    (конфигурацией по умолчанию) занимает приблизительно три минуты
    на такой системе, как Pentium III/Linux 2.2. Реальное время сборки
    будет зависеть от вашего аппаратного обеспечения и от количества
    модулей, которые вы решили компилировать вместе с сервером.</p>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="install" id="install">Установка</a></h2>

    <p>Теперь настало время для установки сервера в каталог
    <em>PREFIX</em>, который был указан при конфигурирования Apache
    (смотрите выше опцию <code>--prefix</code>), выполнив:</p>

<div class="example"><p><code>$ make install</code></p></div>

    <p>Если устанавливать Apache поверх предыдущей версии сервера, то
    старые конфигурационные файлы и документы будут оставлены без изменений.</p>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="customize" id="customize">Настройка</a></h2>

    <p>Далее вы можете настроить ваш HTTP сервер Apache посредством редактирования
    <a href="configuring.html">конфигурационных файлов</a> в каталоге
    <code><em>PREFIX</em>/conf/</code>.</p>

<div class="example"><p><code>$ vi <em>PREFIX</em>/conf/httpd.conf</code></p></div>

    <p>Руководство по использованию Apache вы можете найти либо по локальному
    адресу у себя на сервере <a href="./">docs/manual/</a>, либо на официальном
    сайте Apache <a href="http://httpd.apache.org/docs-2.0/">http://httpd.apache.org/docs-2.0/</a>,
    где опубликована самая последняя версия документации и вся необходимая справочная информация
    по всем возможным <a href="mod/directives.html">конфигурационным директивам</a>.</p>
</div><div class="top"><a href="#page-header"><img alt="top" src="./images/up.gif" /></a></div>
<div class="section">
<h2><a name="test" id="test">Тестирование</a></h2>

    <p>Теперь вы можете <a href="invoking.html">запустить</a> свой HTTP сервер Apache,
    выполнив следующую команду:</p>

<div class="example"><p><code>$ <em>PREFIX</em>/bin/apachectl start</code></p></div>

    <p>и если все прошло успешно, то вы сможете запросить свой первый документ
    по адресу <code>http://localhost/</code>. Веб - страница, которую вы увидете,
    находится в каталоге <code class="directive"><a href="./mod/core.html#documentroot">DocumentRoot</a></code> - по умолчанию,
    это <code><em>PREFIX</em>/htdocs/</code>. Затем <a href="stopping.html">остановите</a>
    сервер следующей командой:</p>

<div class="example"><p><code>$ <em>PREFIX</em>/bin/apachectl stop</code></p></div>
</div></div>
<div id="footer">
<p class="apache">Поддержка осуществляется <a href="http://httpd.apache.org/docs-project/">Apache HTTP Server Documentation Project</a></p>
<p class="menu"><a href="./mod/">Модули</a> | <a href="./mod/directives.html">Директивы</a> | <a href="./faq/">FAQ</a> | <a href="./glossary.html">Глоссарий</a> | <a href="./sitemap.html">Карта сайта</a></p></div>
</body></html>