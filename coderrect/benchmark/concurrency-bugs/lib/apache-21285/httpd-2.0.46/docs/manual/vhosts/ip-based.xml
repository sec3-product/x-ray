<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE manualpage SYSTEM "../style/manualpage.dtd">
<?xml-stylesheet type="text/xsl" href="../style/manual.en.xsl"?>

<manualpage metafile="ip-based.xml.meta">
<parentdocument href="./">Virtual Hosts</parentdocument>
   <title>Apache IP-based Virtual Host Support</title>

<seealso>
<a href="name-based.html">Name-based Virtual Hosts Support</a>
</seealso>

<section id="requirements"><title>System requirements</title>

    <p>As the term <cite>IP-based</cite> indicates, the server
    <strong>must have a different IP address for each IP-based
    virtual host</strong>. This can be achieved by the machine
    having several physical network connections, or by use of
    virtual interfaces which are supported by most modern operating
    systems (see system documentation for details, these are
    frequently called "ip aliases", and the "ifconfig" command is
    most commonly used to set them up).</p>

</section>

<section id="howto"><title>How to set up Apache</title>

    <p>There are two ways of configuring apache to support multiple
    hosts. Either by running a separate httpd daemon for each
    hostname, or by running a single daemon which supports all the
    virtual hosts.</p>

    <p>Use multiple daemons when:</p>

    <ul>
      <li>There are security partitioning issues, such as company1
      does not want anyone at company2 to be able to read their
      data except via the web. In this case you would need two
      daemons, each running with different <directive
      module="mpm_common">User</directive>, <directive
      module="mpm_common">Group</directive>, <directive
      module="mpm_common">Listen</directive>, and <directive
      module="core">ServerRoot</directive> settings.</li>

      <li>You can afford the memory and <a
      href="../misc/descriptors.html">file descriptor
      requirements</a> of listening to every IP alias on the
      machine. It's only possible to <directive
      module="mpm_common">Listen</directive> to the "wildcard"
      address, or to specific addresses. So if you have a need to
      listen to a specific address for whatever reason, then you
      will need to listen to all specific addresses. (Although one
      httpd could listen to N-1 of the addresses, and another could
      listen to the remaining address.)</li>
    </ul>

    <p>Use a single daemon when:</p>

    <ul>
      <li>Sharing of the httpd configuration between virtual hosts
      is acceptable.</li>

      <li>The machine services a large number of requests, and so
      the performance loss in running separate daemons may be
      significant.</li>
    </ul>

</section>

<section id="multiple"><title>Setting up multiple daemons</title>

    <p>Create a separate httpd installation for each virtual host. For
    each installation, use the <directive
    module="mpm_common">Listen</directive> directive in the
    configuration file to select which IP address (or virtual host)
    that daemon services. e.g.</p>

    <example>
    Listen www.smallco.com:80
    </example>

    <p>It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>).</p>

</section>

<section id="single"><title>Setting up a single daemon
	with virtual hosts</title>

    <p>For this case, a single httpd will service requests for the
    main server and all the virtual hosts. The <directive
    module="core">VirtualHost</directive> directive
    in the configuration file is used to set the values of <directive
    module="core">ServerAdmin</directive>, <directive
    module="core">ServerName</directive>, <directive
    module="core">DocumentRoot</directive>, <directive
    module="core">ErrorLog</directive> and <directive
    module="mod_log_config">TransferLog</directive>
    or <directive module="mod_log_config">CustomLog</directive>
    configuration directives to different values for each virtual
    host. e.g.</p>

    <example>
    &lt;VirtualHost www.smallco.com&gt;<br />
    ServerAdmin webmaster@mail.smallco.com<br />
    DocumentRoot /groups/smallco/www<br />
    ServerName www.smallco.com<br />
    ErrorLog /groups/smallco/logs/error_log<br />
    TransferLog /groups/smallco/logs/access_log<br />
    &lt;/VirtualHost&gt;<br />
		<br />
    &lt;VirtualHost www.baygroup.org&gt;<br />
    ServerAdmin webmaster@mail.baygroup.org<br />
    DocumentRoot /groups/baygroup/www<br />
    ServerName www.baygroup.org<br />
    ErrorLog /groups/baygroup/logs/error_log<br />
    TransferLog /groups/baygroup/logs/access_log<br />
    &lt;/VirtualHost&gt;
		</example>

    <p>It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>).</p>

    <p>Almost <strong>any</strong> configuration directive can be
    put in the VirtualHost directive, with the exception of
    directives that control process creation and a few other
    directives. To find out if a directive can be used in the
    VirtualHost directive, check the <a
    href="../mod/directive-dict.html#Context">Context</a> using the
    <a href="../mod/directives.html">directive index</a>.</p>

    <p><directive module="mpm_common">User</directive> and <directive
    module="mpm_common">Group</directive> may be used inside a
    VirtualHost directive if the <a href="../suexec.html">suEXEC
    wrapper</a> is used.</p>

    <p><em>SECURITY:</em> When specifying where to write log files,
    be aware of some security risks which are present if anyone
    other than the user that starts Apache has write access to the
    directory where they are written. See the <a
    href="../misc/security_tips.html">security tips</a> document
    for details.</p>

</section>
</manualpage>
