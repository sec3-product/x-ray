<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>Using Apache with Microsoft Windows - Apache HTTP Server</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" />
<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body id="manual-page"><div id="page-header">
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/directives.html">Directives</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">Glossary</a> | <a href="../sitemap.html">Sitemap</a></p>
<p class="apache">Apache HTTP Server Version 2.0</p>
<img alt="" src="../images/feather.gif" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">HTTP Server</a> &gt; <a href="http://httpd.apache.org/docs-project/">Documentation</a> &gt; <a href="../">Version 2.0</a> &gt; <a href="./">Platform Specific Notes</a></div><div id="page-content"><div id="preamble"><h1>Using Apache with Microsoft Windows</h1>

    <p>This document explains how to install, configure and run
    Apache 2.0 under Microsoft Windows. If you find any bugs, or
    wish to contribute in other ways, please use our <a href="http://httpd.apache.org/bug_report.html">bug reporting
    page</a>.</p>

    <p>This document assumes that you are installing a binary
    distribution of Apache. If you want to compile Apache yourself
    (possibly to help with development or tracking down bugs),
    see <a href="win_compiling.html">Compiling Apache for Microsoft
    Windows</a>.</p>

    <p><strong>Because of the current versioning policies on Microsoft
    Windows operating system families, this document assumes the
    following:</strong></p>
    <ul>
      <li><strong>Windows NT:</strong> This means all versions of
      Windows that are based on the Windows NT kernel. Includes Windows
      NT, Windows 2000, Windows XP and Windows .Net Server 2003.</li>
      <li><strong>Windows 9x:</strong> This means older,
      consumer-oriented versions of Windows. Includes Windows 95 (also
      OSR2), Windows 98 and Windows ME.</li>
    </ul>

  </div>
<div id="quickview"><ul id="toc"><li><img alt="" src="../images/down.gif" /> <a href="#req">Operating System Requirements</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#down">Downloading Apache for Windows</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#inst">Installing Apache for Windows</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#cust">Customizing Apache for Windows</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#winsvc">Running Apache as a Service</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#wincons">Running Apache as a Console Application</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#test">Testing the Installation</a></li>
</ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="req" id="req">Operating System Requirements</a></h2>
    

    <p>The primary Windows platform for running Apache 2.0 is Windows
    NT. The binary installer only works with the x86 family of
    processors, such as Intel and AMD processors. Running Apache on
    Windows 9x is not thoroughly tested, and it is never recommended on
    production systems.
    </p>

    <p>On all operating systems, TCP/IP networking must be installed
    and working. If running on Windows 95, the Winsock 2 upgrade must
    be installed. Winsock 2 for Windows 95 can be downloaded from <a href="http://www.microsoft.com/windows95/downloads/contents/WUAdminTools/S_WUNetworkingTools/W95Sockets2/Default.asp">here</a>.
    </p>

    <p>On Windows NT 4.0, installing Service Pack 6 is strongly
    recommended, as Service Pack 4 created known issues with TCP/IP
    and Winsock integrity that were resolved in later Service Packs.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="down" id="down">Downloading Apache for Windows</a></h2>
    

    <p>Information on the latest versions of Apache can be found on the
    web site of the Apache web server at
    <a href="http://httpd.apache.org/download.cgi">http://httpd.apache.org/download.cgi</a>.
    There you will find the current release, as well as more recent alpha
    or beta test versions, and a list of HTTP and FTP mirrors from which
    you can download the Apache web server. Please use a mirror near to
    you for a fast and reliable download.</p>

    <p>For Windows installations you should download the version of
    Apache for Windows with the <code>.msi</code> extension. This is a
    single Microsoft Installer file, which contains a ready-to-run
    version of Apache. There is a separate <code>.zip</code> file,
    which contains only the source code. You can compile Apache
    yourself with the Microsoft Visual C++ (Visual Studio) tools.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="inst" id="inst">Installing Apache for Windows</a></h2>
    

    <p>You need Microsoft Installer 1.2 or above for the installation
    to work. On Windows 9x you can update your Microsoft Installer to
    version 2.0 <a href="http://www.microsoft.com/downloads/release.asp?ReleaseID=32831">here</a>
    and on Windows NT 4.0 and 2000 the version 2.0 update can be found
    <a href="http://www.microsoft.com/downloads/release.asp?ReleaseID=32832">here</a>.
    Windows XP does not need this update.</p>

    <p>Note that you cannot install two versions of Apache 2.0 on the
    same computer with the binary installer. You can, however, install
    a version of the 1.3 series <strong>and</strong> a version of the
    2.0 series on the same computer without problems. If you need to
    have two different 2.0 versions on the same computer, you have to
    <a href="win_compiling.html">compile and install Apache from the
    source</a>.</p>

    <p>Run the Apache <code>.msi</code> file you downloaded above. The
    installation will ask you for these things:</p>

    <ol>
      <li><p><strong>Network Domain.</strong> Enter the DNS domain in which
      your server is or will be registered in. For example, if your
      server's full DNS name is <code>server.mydomain.net</code>, you would
      type <code>mydomain.net</code> here.</p></li>

      <li><p><strong>Server Name.</strong> Your server's full DNS name.
      From the example above, you would type <code>server.mydomain.net</code>
      here.</p></li>

      <li><p><strong>Administrator's Email Address.</strong> Enter the
      server administrator's or webmaster's email address here. This
      address will be displayed along with error messages to the client
      by default.</p></li>

      <li><p><strong>For whom to install Apache</strong> Select <code>for
      All Users, on Port 80, as a Service - Recommended</code> if you'd
      like your new Apache to listen at port 80 for incoming traffic.
      It will run as a service (that is, Apache will run even if no one
      is logged in on the server at the moment) Select <code>only for
      the Current User, on Port 8080, when started Manually</code> if
      you'd like to install Apache for your personal experimenting or
      if you already have another WWW server running on port 80.</p></li>

      <li><p><strong>The installation type.</strong> Select <code>Typical</code>
      for everything except the source code and libraries for module
      development. With <code>Custom</code> you can specify what to
      install. A full install will require about 13 megabytes of free
      disk space. This does <em>not</em> include the size of your web
      site(s).</p></li>

      <li><p><strong>Where to install.</strong> The default path is
      <code>C:\Program Files\Apache Group</code> under which a directory
      called <code>Apache2</code> will be created by default.</p></li>
    </ol>

    <p>During the installation, Apache will configure the files in the
    <code>conf</code> subdirectory to reflect the chosen installation
    directory. However, if any of the configuration files in this
    directory already exist, they will not be overwritten. Instead, the
    new copy of the corresponding file will be left with the extension
    <code>.default</code>. So, for example, if <code>conf\httpd.conf</code>
    already exists, it will be renamed as <code>conf\httpd.conf.default</code>.
    After the installation you should manually check to see what new
    settings are in the <code>.default</code> file, and if necessary,
    update your existing configuration file.</p>

    <p>Also, if you already have a file called <code>htdocs\index.html</code>,
    it will not be overwritten (and no <code>index.html.default</code>
    will be installed either). This means it should be safe to install
    Apache over an existing installation, although you would have to
    stop the existing running server before doing the installation, and
    then start the new one after the installation is finished.</p>

    <p>After installing Apache, you must edit the configuration files
    in the <code>conf</code> subdirectory as required. These files
    will be configured during the installation so that Apache is ready
    to be run from the directory it was installed into, with the
    documents server from the subdirectory <code>htdocs</code>. There
    are lots of other options which you should set before you really
    start using Apache. However, to get started quickly, the files
    should work as installed.</p>
  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="cust" id="cust">Customizing Apache for Windows</a></h2>
    

    <p>Apache is configured by the files in the <code>conf</code>
    subdirectory. These are the same files used to configure the Unix
    version, but there are a few different directives for Apache on
    Windows. See the <a href="../mod/directives.html">directive index</a>
    for all the available directives.</p>

    <p>The main differences in Apache for Windows are:</p>
    <ul>
      <li><p>Because Apache for Windows is multithreaded, it does not
      use a separate process for each request, as Apache does on Unix.
      Instead there are usually only two Apache processes running: a
      parent process, and a child which handles the requests. Within
      the child process each request is handled by a separate thread.
      </p>

      <p>The process management directives are also different:</p>

      <p><code class="directive"><a href="../mod/mpm_common.html#maxrequestsperchild">MaxRequestsPerChild</a></code>:
      Like the Unix directive, this controls how many requests a single
      child process will serve before exiting. However, unlike on Unix,
      a single process serves all the requests at once, not just one.
      If this is set, it is recommended that a very high number is
      used. The recommended default, <code>MaxRequestsPerChild 0</code>,
      causes the child process to never exit.</p>

      <div class="warning"><strong>Warning: The server configuration
      file is reread when a new child process is started. If you have
      modified <code>httpd.conf</code>, the new child may not start or
      you may receive unexpected results.</strong></div>

      <p><code class="directive"><a href="../mod/mpm_common.html#threadsperchild">ThreadsPerChild</a></code>:
      This directive is new. It tells the server how many threads it
      should use. This is the maximum number of connections the server
      can handle at once, so be sure to set this number high enough for
      your site if you get a lot of hits. The recommended default is
      <code>ThreadsPerChild 50</code>.</p></li>

      <li><p>The directives that accept filenames as arguments must use
      Windows filenames instead of Unix ones. However, because Apache
      uses Unix-style names internally, you must use forward slashes,
      not backslashes. Drive letters can be used; if omitted, the drive
      with the Apache executable will be assumed.</p></li>

      <li><p>Apache for Windows contains the ability to load modules at
      runtime, without recompiling the server. If Apache is compiled
      normally, it will install a number of optional modules in the
      <code>\Apache2\modules</code> directory. To activate these or
      other modules, the new <code class="directive"><a href="../mod/mod_so.html#loadmodule">LoadModule</a></code>
      directive must be used. For example, to activate the status
      module, use the following (in addition to the status-activating
      directives in <code>access.conf</code>):</p>

      <div class="example"><p><code>
        LoadModule status_module modules/mod_status.so
      </code></p></div>

      <p>Information on <a href="../mod/mod_so.html#creating">creating
      loadable modules</a> is also available.</p></li>

      <li><p>Apache can also load ISAPI (Internet Server Application
      Programming Interface) extensions (i.e. internet server
      applications), such as those used by Microsoft IIS and other
      Windows servers. <a href="../mod/mod_isapi.html">More information
      is available</a>. Note that Apache <strong>cannot</strong> load
      ISAPI Filters.</p></li>

      <li><p>When running CGI scripts, the method Apache uses to find
      the interpreter for the script is configurable using the
      <code class="directive"><a href="../mod/core.html#scriptinterpretersource">ScriptInterpreterSource</a></code>
      directive.</p></li>

      <li><p>Since it is often difficult to manage files with names
      like <code>.htaccess</code> in Windows, you may find it useful to
      change the name of this per-directory configuration file using
      the <code class="directive"><a href="../mod/core.html#accessfilename">AccessFilename</a></code>
      directive.</p></li>

      <li><p>Any errors during Apache startup are logged into the
      Windows event log when running on Windows NT. This mechanism
      acts as a backup for those situations where Apache cannot even
      access the normally used <code>error.log</code> file. You can
      view the Windows event log by using the Event Viewer application
      on Windows NT 4.0, and the Event Viewer MMC snap-in on newer
      versions of Windows.</p>

      <div class="note"><strong>Note that there is no startup error logging on
      Windows 9x because no Windows event log exists on those operating
      systems.</strong></div></li>
    </ul>

  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="winsvc" id="winsvc">Running Apache as a Service</a></h2>
    

    <p>Apache can be run as a service on Windows NT. There is some
    highly experimental support for similar behavior on Windows 9x.</p>

    <p>You can install Apache as a service automatically during the
    installation. If you chose to install for all users, the
    installation will create an Apache service for you. If you specify
    to install for yourself only, you can manually register Apache as a
    service after the installation. You have to be a member of the
    Administrators group for the service installation to succeed.</p>

    <p>Apache comes with a utility called the Apache Service Monitor.
    With it you can see and manage the state of all installed Apache
    services on any machine on your network. To be able to manage an
    Apache service with the monitor, you have to first install the
    service (either automatically via the installation or manually).
    </p>

    <p>You can install Apache as a Windows NT service as follows from
    the command prompt at the Apache <code>bin</code> subdirectory:</p>

    <div class="example"><p><code>
      apache -k install
    </code></p></div>

    <p>If you need to specify the name of the service you want to
    install, use the following command. You have to do this if you
    have several different service installations of Apache on your
    computer.</p>

    <div class="example"><p><code>
      apache -k install -n "MyServiceName"
    </code></p></div>

    <p>If you need to have specifically named configuration files for
    different services, you must use this:</p>

    <div class="example"><p><code>
      apache -k install -n "MyServiceName" -f "c:\files\my.conf"
    </code></p></div>

    <p>If you use the first command without any special parameters except
    <code>-k install</code>, the service will be called <code>Apache2</code>
    and the configuration will be assumed to be <code>conf\httpd.conf</code>.
    </p>

    <p>Removing an Apache service is easy. Just use:</p>

    <div class="example"><p><code>
      apache -k uninstall
    </code></p></div>

    <p>The specific Apache service to be uninstalled can be specified by using:</p>

    <div class="example"><p><code>
      apache -k uninstall -n "MyServiceName"
    </code></p></div>

    <p>Normal starting, restarting and shutting down of an Apache
    service is usually done via the Apache Service Monitor, by using
    commands like <code>NET START Apache2</code> and <code>NET STOP
    Apache2</code> or via normal Windows service management. Before
    starting Apache as a service by any means, you should test the
    service's configuration file by using:</p>

    <div class="example"><p><code>
      apache -n "MyServiceName" -t
    </code></p></div>

    <p>You can control an Apache service by its command line switches,
    too. To start an installed Apache service you'll use this:</p>

    <div class="example"><p><code>
      apache -k start
    </code></p></div>

    <p>To stop an Apache service via the command line switches, use
    this:</p>

    <div class="example"><p><code>
      apache -k stop
    </code></p></div>

    <p>or</p>

    <div class="example"><p><code>
      apache -k shutdown
    </code></p></div>

    <p>You can also restart a running service and force it to reread
    its configuration file by using:</p>

    <div class="example"><p><code>
      apache -k restart
    </code></p></div>

    <p>By default, all Apache services are registered to run as the
    system user (the <code>LocalSystem</code> account). The
    <code>LocalSystem</code> account has no privileges to your network
    via any Windows-secured mechanism, including the file system, named
    pipes, DCOM, or secure RPC. It has, however, wide privileges locally.
    </p>

    <div class="warning"><strong>Never grant any network privileges to
    the <code>LocalSystem</code> account! If you need Apache to be able
    to access network resources, create a separate account for Apache as
    noted below.</strong></div>

    <p>You may want to create a separate account for running Apache
    service(s). Especially, if you have to access network resources
    via Apache, this is strongly recommended.</p>

    <ol>
      <li>Create a normal domain user account, and be sure to
      memorize its password.</li>

      <li>Grant the newly-created user a privilege of <code>Log on
      as a service</code> and <code>Act as part of the operating
      system</code>. On Windows NT 4.0 these privileges are granted via
      User Manager for Domains, but on Windows 2000 and XP you probably
      want to use Group Policy for propagating these settings. You can
      also manually set these via the Local Security Policy MMC snap-in.
      </li>

      <li>Confirm that the created account is a member of the Users
      group.</li>

      <li>Grant the account read and execute (RX) rights to all document
      and script folders (<code>htdocs</code> and <code>cgi-bin</code>
      for example).</li>

      <li>Grant the account change (RWXD) rights to the
      Apache <code>logs</code> directory.</li>

      <li>Grant the account read and execute (RX) rights to the
      <code>Apache.exe</code> binary executable.</li>
    </ol>

    <div class="note">It is usually a good practice to grant the user the Apache
    service runs as read and execute (RX) access to the whole Apache2
    directory, except the <code>logs</code> subdirectory, where the
    user has to have at least change (RWXD) rights.</div>

    <p>If you allow the account to log in as a user and as a service,
    then you can log on with that account and test that the account has the
    privileges to execute the scripts, read the web pages, and that
    you can start Apache in a console window. If this works, and you
    have followed the steps above, Apache should execute as a service
    with no problems.</p>

    <div class="note"><strong>Error code 2186</strong> is a good indication that
    you need to review the "Log On As" configuration for the service,
    since Apache cannot access a required network resource. Also, pay
    close attention to the privileges of the user Apache is
    configured to run as.</div>

    <p>When starting Apache as a service you may encounter an error
    message from the Windows Service Control Manager. For example,
    if you try to start Apache by using the Services applet in the
    Windows Control Panel, you may get the following message:</p>

    <div class="example"><p><code>
      Could not start the Apache2 service on \\COMPUTER <br />
      Error 1067; The process terminated unexpectedly.
    </code></p></div>

    <p>You will get this generic error if there is any problem with
    starting the Apache service. In order to see what is really causing
    the problem you should follow the instructions for Running Apache
    for Windows from the Command Prompt.</p>

    <p>There is some support for Apache on Windows 9x to behave in a
    similar manner as a service on Windows NT. It is <strong>highly
    experimental</strong>. It is not of production-class reliability,
    and its future is not guaranteed. It can be mostly regarded as
    a risky thing to play with - proceed with caution!</p>

    <p>There are some differences between the two kinds of services
    you should be aware of:</p>

    <ul>
      <li><p>Apache will attempt to start and if successful it will run
      in the background. If you run the command</p>

      <div class="example"><p><code>
        apache -n "MyServiceName" -k start
      </code></p></div>

      <p>via a shortcut on your desktop, for example, then if the
      service starts successfully, a console window will flash up but
      it immediately disappears. If Apache detects any errors on startup
      such as incorrect entries in the httpd.conf configuration file,
      the console window will remain visible. This will display an error
      message which will be useful in tracking down the cause of the
      problem.</p></li>

      <li><p>Windows 9x does not support <code>NET START</code> or
      <code>NET STOP</code> commands. You must control the Apache
      service on the command prompt via the <code>-k</code> switches.
      </p></li>

      <li><p>Apache and Windows 9x offer no support for running Apache
      as a specific user with network privileges. In fact, Windows 9x
      offers no security on the local machine, either. This is the
      simple reason because of which the Apache Software Foundation
      never endorses use of a Windows 9x -based system as a public
      Apache server. The primitive support for Windows 9x exists only
      to assist the user in developing web content and learning the
      Apache server, and perhaps as an intranet server on a secured,
      private network.</p></li>

    </ul>

    <p>Once you have confirmed that Apache runs correctly as a
    console application you can install, control and uninstall the
    pseudo-service with the same commands as on Windows NT. You can
    also use the Apache Service Monitor to manage Windows 9x
    pseudo-services.</p>

  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="wincons" id="wincons">Running Apache as a Console Application</a></h2>
    

    <p>Running Apache as a service is usually the recommended way to
    use it, but it is sometimes easier to work from the command line
    (on Windows 9x running Apache from the command line is the
    recommended way due to the lack of reliable service support.)</p>

    <p>To run Apache from the command line as a console application,
    use the following command:</p>

    <div class="example"><p><code>
      apache
    </code></p></div>

    <p>Apache will execute, and will remain running until it is stopped
    by pressing Control-C.</p>

    <p>You can also run Apache via the shortcut Start Apache in Console
    placed to <code>Start Menu --&gt; Programs --&gt; Apache HTTP Server
    2.0.xx --&gt; Control Apache Server</code> during the installation.
    This will open a console window and start Apache inside it. If you
    don't have Apache installed as a service, the window will remain
    visible until you stop Apache by pressing Control-C in the console
    window where Apache is running in. The server will exit in a few
    seconds. However, if you do have Apache installed as a service, the
    shortcut starts the service. If the Apache service is running
    already, the shortcut doesn't do anything.</p>

    <p>You can tell a running Apache to stop by opening another console
    window and entering:</p>

    <div class="example"><p><code>
      apache -k shutdown
    </code></p></div>

    <p>This should be preferred over pressing Control-C because this
    lets Apache end any current operations and clean up gracefully.</p>

    <p>You can also tell Apache to restart. This forces it to reread
    the configuration file. Any operations in progress are allowed to
    complete without interruption. To restart Apache, use:</p>

    <div class="example"><p><code>
      apache -k restart
    </code></p></div>

    <div class="note">Note for people familiar with the Unix version of Apache:
    these commands provide a Windows equivalent to <code>kill -TERM
    <em>pid</em></code> and <code>kill -USR1 <em>pid</em></code>. The
    command line option used, <code>-k</code>, was chosen as a reminder
    of the <code>kill</code> command used on Unix.</div>

    <p>If the Apache console window closes immediately or unexpectedly
    after startup, open the Command Prompt from the Start Menu --&gt;
    Programs. Change to the folder to which you installed Apache, type
    the command <code>apache</code>, and read the error message. Then
    change to the logs folder, and review the <code>error.log</code>
    file for configuration mistakes. If you accepted the defaults when
    you installed Apache, the commands would be:</p>

    <div class="example"><p><code>
      c: <br />
      cd "\Program Files\Apache Group\Apache2\bin" <br />
      apache
    </code></p></div>

    <p>Then wait for Apache to stop, or press Control-C. Then enter the
    following:</p>

    <div class="example"><p><code>
      cd ..\logs <br />
      more &lt; error.log
    </code></p></div>

    <p>When working with Apache it is important to know how it will
    find the configuration file. You can specify a configuration file
    on the command line in two ways:</p>

    <ul>
      <li><p><code>-f</code> specifies an absolute or relative path to
      a particular configuration file:</p>

      <div class="example"><p><code>
        apache -f "c:\my server files\anotherconfig.conf"
      </code></p></div>

      <p>or</p>

      <div class="example"><p><code>
        apache -f files\anotherconfig.conf
      </code></p></div></li>

      <li><p><code>-n</code> specifies the installed Apache service
      whose configuration file is to be used:</p>

      <div class="example"><p><code>
        apache -n "MyServiceName"
      </code></p></div>
      </li>
    </ul>

    <p>In both of these cases, the proper
    <code class="directive"><a href="../mod/core.html#serverroot">ServerRoot</a></code> should be set in
    the configuration file.</p>

    <p>If you don't specify a configuration file with <code>-f</code>
    or <code>-n</code>, Apache will use the file name compiled into the
    server, such as <code>conf\httpd.conf</code>. This built-in path
    is relative to the installation directory. You can verify the compiled
    file name from a value labelled as <code>SERVER_CONFIG_FILE</code> when
    invoking Apache with the <code>-V</code> switch, like this:</p>

    <div class="example"><p><code>
      apache -V
    </code></p></div>

    <p>Apache will then try to determine its <code class="directive"><a href="../mod/core.html#&#10;    serverroot">
    ServerRoot</a></code> by trying the following, in this order:</p>

    <ol>
      <li>A <code class="directive"><a href="../mod/core.html#serverroot">ServerRoot</a></code> directive
      via the <code>-C</code> command line switch.</li>

      <li>The <code>-d</code> switch on the command line.</li>

      <li>Current working directory.</li>

      <li>A registry entry which was created if you did a binary
      installation.</li>

      <li>The server root compiled into the server. This is <code>
      /apache</code> by default, you can verify it by using <code>
      apache -V</code> and looking for a value labelled as
      <code>HTTPD_ROOT</code>.</li>
    </ol>

    <p>During the installation, a version-specific registry key is
    created in the Windows registry. The location of this key depends
    on the type of the installation. If you chose to install Apache
    for all users, the key is located under the
    <code>HKEY_LOCAL_MACHINE</code> hive, like this (the version
    numbers will of course vary between different versions of Apache:
    </p>

    <div class="example"><p><code>
      HKEY_LOCAL_MACHINE\SOFTWARE\Apache Group\Apache\2.0.43
    </code></p></div>

    <p>Correspondingly, if you chose to install Apache for the current
    user only, the key is located under the <code>HKEY_CURRENT_USER</code>
    hive, the contents of which are dependent of the user currently
    logged on:</p>

    <div class="example"><p><code>
      HKEY_CURRENT_USER\SOFTWARE\Apache Group\Apache\2.0.43
    </code></p></div>

    <p>This key is compiled into the server and can enable you to test
    new versions without affecting the current version. Of course, you
    must take care not to install the new version in the same
    directory as another version.</p>

    <p>If you did not do a binary install, Apache will in some
    scenarios complain about the missing registry key. This warning can
    be ignored if the server was otherwise able to find its
    configuration file.</p>

    <p>The value of this key is the
    <code class="directive"><a href="../mod/core.html#serverroot">ServerRoot</a></code> directory which
    contains the <code>conf</code> subdirectory. When Apache starts it
    reads the <code>httpd.conf</code> file from that directory. If
    this file contains a <code class="directive"><a href="../mod/core.html#serverroot">ServerRoot</a></code>
    directive which contains a different directory from the one
    obtained from the registry key above, Apache will forget the
    registry key and use the directory from the configuration file. If
    you copy the Apache directory or configuration files to a new
    location it is vital that you update the
    <code class="directive"><a href="../mod/core.html#serverroot">ServerRoot</a></code> directive in the
    <code>httpd.conf</code> file to reflect the new location.</p>

  </div><div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2><a name="test" id="test">Testing the Installation</a></h2>
    

    <p>After starting Apache (either in a console window or as a
    service) it will be listening on port 80 (unless you changed the
    <code class="directive"><a href="../mod/mpm_common.html#listen">Listen</a></code> directive in the
    configuration files or installed Apache only for the current user).
    To connect to the server and access the default page, launch a
    browser and enter this URL:</p>

    <div class="example"><p><code>
      http://localhost/
    </code></p></div>

    <p>Apache should respond with a welcome page and a link to the
    Apache manual. If nothing happens or you get an error, look in the
    <code>error.log</code> file in the <code>logs</code> subdirectory.
    If your host is not connected to the net, or if you have serious
    problems with your DNS (Domain Name Service) configuration, you
    may have to use this URL:</p>

    <div class="example"><p><code>
      http://127.0.0.1/
    </code></p></div>

    <p>Once your basic installation is working, you should configure it
    properly by editing the files in the <code>conf</code> subdirectory.
    Again, if you change the configuration of the Windows NT service
    for Apache, first attempt to start it from the command line to
    make sure that the service starts with no errors.</p>

    <p>Because Apache <strong>cannot</strong> share the same port with
    another TCP/IP application, you may need to stop, uninstall or reconfigure
    certain other services before running Apache. These conflicting
    services include other WWW servers and some firewall implementations.
    </p>

  </div></div>
<div id="footer">
<p class="apache">Maintained by the <a href="http://httpd.apache.org/docs-project/">Apache HTTP Server Documentation Project</a></p>
<p class="menu"><a href="../mod/">Modules</a> | <a href="../mod/directives.html">Directives</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">Glossary</a> | <a href="../sitemap.html">Sitemap</a></p></div>
</body></html>