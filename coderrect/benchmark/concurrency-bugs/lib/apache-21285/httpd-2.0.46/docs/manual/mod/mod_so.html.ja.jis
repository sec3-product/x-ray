<?xml version="1.0" encoding="iso-2022-jp"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja" xml:lang="ja"><head><!--
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
              This file is generated from xml source: DO NOT EDIT
        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
      -->
<title>mod_so - Apache HTTP サーバ</title>
<link href="../style/css/manual.css" rel="stylesheet" media="all" type="text/css" title="Main stylesheet" />
<link href="../style/css/manual-loose-100pc.css" rel="alternate stylesheet" media="all" type="text/css" title="No Sidebar - Default font size" />
<link href="../style/css/manual-print.css" rel="stylesheet" media="print" type="text/css" />
<link href="../images/favicon.ico" rel="shortcut icon" /></head>
<body>
<div id="page-header">
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p>
<p class="apache">Apache HTTP サーバ バージョン 2.0</p>
<img alt="" src="../images/feather.gif" /></div>
<div class="up"><a href="./"><img title="&lt;-" alt="&lt;-" src="../images/left.gif" /></a></div>
<div id="path">
<a href="http://www.apache.org/">Apache</a> &gt; <a href="http://httpd.apache.org/">HTTP サーバ</a> &gt; <a href="http://httpd.apache.org/docs-project/">ドキュメンテーション</a> &gt; <a href="../">バージョン 2.0</a> &gt; <a href="./">モジュール</a></div>
<div id="page-content">
<div id="preamble"><h1>Apache モジュール mod_so</h1>
<table class="module"><tr><th><a href="module-dict.html#Description">説明:</a></th><td>起動時や再起動時に実行コードとモジュールをサーバにロードする
</td></tr>
<tr><th><a href="module-dict.html#Status">ステータス:</a></th><td>Extension</td></tr>
<tr><th><a href="module-dict.html#ModuleIdentifier">モジュール識別子:</a></th><td>so_module</td></tr>
<tr><th><a href="module-dict.html#SourceFile">ソースファイル:</a></th><td>mod_so.c</td></tr>
<tr><th><a href="module-dict.html#Compatibility">互換性:</a></th><td>このモジュールは Window では (常に含まれている) Base
モジュールです</td></tr></table>
<h3>概要</h3>


    <p>いくつかのオペレーティングシステムでは、サーバの再コンパイルをする代わりに、
    このモジュールを使用して
    <a href="../dso.html">動的共有オブジェクト</a>
    (DSO) 機構により、実行時に Apache にモジュールを読み込ませることが
    できます。</p>

    <p>Unix 上では、読み込まれるコードは通常は共有オブジェクトファイル
    (普通 <code>.so</code> という拡張子が付いています) からです。
    Windows 上ではこのモジュールの拡張子は <code>.so</code> か <code>.dll</code>
    です。</p>

    <div class="warning"><h3>警告</h3>
    <p>Apache 1.3 のモジュールを直接 Apache 2.0 で使うことはできません
    ― モジュールは Apache 2.0 用に動的にロードされるか、
    直接組み込まれるために修正されなければなりません。</p>
    </div>
</div>
<div id="quickview"><h3 class="directives">ディレクティブ</h3>
<ul id="toc">
<li><img alt="" src="../images/down.gif" /> <a href="#loadfile">LoadFile</a></li>
<li><img alt="" src="../images/down.gif" /> <a href="#loadmodule">LoadModule</a></li>
</ul>
<h3>トピック</h3>
<ul id="topics">
<li><img alt="" src="../images/down.gif" /> Windows 用のロード可能なモジュールを作成する</li>
</ul></div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="section">
<h2>Windows 用のロード可能なモジュールを作成する</h2>

    <div class="note"><h3>注</h3>
    <p>Apache 1.3.15 と 2.0 とで Windows のモジュール名の形式は変更されました
    ― モジュールは mod_foo.so という名前になりました。</p>

    <p>まだ mod_so で ApacheModuleFoo.dll という名前のモジュールも
    ロードされますが、新しい名前の付け方を使う方が好まれます。モジュールを
    2.0 用に移植しているのであれば、2.0 の習慣に合うように名前を
    修正してください。</p></div>

    <p>Apache のモジュール API は UNIX と Windows 間では変更されていません。
    多くのモジュールは全く変更なし、もしくは簡単な変更により Windows 
    で実行できるようになります。ただし、それ以外の Windows には無い Unix
    アーキテクチャーの機能に依存したモジュールは動作しません。</p>

    <p>モジュールが実際に動作するときは、
    二つの方法のどちらかでサーバに追加することができます。まず、Unix
    と同様にサーバにコンパイルして組み込むことができます。Windows
    用の Apache は Unix 用の Apache にある <code>Configure</code>
    プログラムがありませんので、モジュールのソースファイルを
    ApacheCore プロジェクトファイルに追加し、シンボルを
    <code>os\win32\modules.c</code> ファイルに追加する必要があります。</p>

    <p>二つ目はモジュールを DLL としてコンパイルする方法です。
    DLL は共有ライブラリで、実行時に
    <code><code class="directive">LoadModule</code></code>
    ディレクティブによりサーバに読み込むことができます。これらのモジュール
    DLL はそのまま配布することが可能で、サーバを再コンパイルすることなく、Windows
    用の Apache のすべてのインストールで実行することができます。</p>

    <p>モジュール DLL を作成するためには、
    モジュールの作成に小さな変更を行なう必要があります。
    つまり、モジュールのレコード (これは後で作成されます。
    以下を参照してください) が DLL からエクスポートされなければなりません。
    これを行なうには、<code>AP_MODULE_DECLARE_DATA</code> (Apache
    のヘッダファイルで定義されています) をモジュールのモジュールレコード
    定義の部分に追加してください。たとえば、モジュールに</p>
<div class="example"><p><code>
    module foo_module;
</code></p></div>

    <p>があるとすると、それを次のもので置き換えてください。</p>
<div class="example"><p><code>
    module AP_MODULE_DECLARE_DATA foo_module;
</code></p></div>

    <p>Unix 上でもこのモジュールを
    変更無しで使い続けられるように、このマクロは Windows
    上でのみ効力を持ちます。<code>.DEF</code>
    ファイルの方を良く知っているという場合は、
    代わりにそれを使ってモジュールレコードを
    エクスポートすることもできます。</p>
    <p>さあ、あなたのモジュールの DLL を作成しましょう。これを、
    libhttpd.lib 共有ライブラリがコンパイルされたときに作成された
    ibhttpd.lib エクスポートライブラリとリンクしてください。この時に、
    Apache のヘッダファイルが正しい位置にあるように、
    コンパイラの設定を変える必要があるかもしれません。
    このライブラリはサーバルートの modules ディレクトリにあります。
    ビルド環境が正しく設定されるように、既存のモジュール用の .dsp を
    取ってくるのが一番良いでしょう。もしくは、あなたの .dsp と
    コンパイラとリンクのオプションを比較する、というものでも良いです。</p>

    <p>これで DLL 版のモジュールが作成されているはずです。
    サーバルートの <code>modules</code>
    ディレクトリにモジュールを置いて、
    <code><code class="directive">LoadModule</code></code>
    ディレクティブを使って読み込んでください。</p>
</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="LoadFile" id="LoadFile">LoadFile</a> <a name="loadfile" id="loadfile">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>指定されたオブジェクトファイルやライブラリをリンクする</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>LoadFile <em>filename</em> [<em>filename</em>] ...</code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Extension</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_so</td></tr>
</table>

    <p>LoadFile ディレクティブは、サーバが起動されたときや再起動されたときに、
    指定されたオブジェクトファイルやライブラリをリンクします。
    これはモジュールが動作するために必要になるかもしれない追加の
    コードを読み込むために使用されます。<em>Filename</em> は絶対パスか、<a href="core.html#serverroot">ServerRoot</a> からの相対パスです。</p>

    <p>例:</p>

    <div class="example"><p><code>LoadFile libexec/libxmlparse.so</code></p></div>


</div>
<div class="top"><a href="#page-header"><img alt="top" src="../images/up.gif" /></a></div>
<div class="directive-section"><h2><a name="LoadModule" id="LoadModule">LoadModule</a> <a name="loadmodule" id="loadmodule">ディレクティブ</a></h2>
<table class="directive">
<tr><th><a href="directive-dict.html#Description">説明:</a></th><td>オブジェクトファイルやライブラリをリンクし、使用モジュールの
リストに追加する</td></tr>
<tr><th><a href="directive-dict.html#Syntax">構文:</a></th><td><code>LoadModule <em>module filename</em></code></td></tr>
<tr><th><a href="directive-dict.html#Context">コンテキスト:</a></th><td>サーバ設定ファイル</td></tr>
<tr><th><a href="directive-dict.html#Status">ステータス:</a></th><td>Extension</td></tr>
<tr><th><a href="directive-dict.html#Module">モジュール:</a></th><td>mod_so</td></tr>
</table>

    <p>LoadModule ディレクティブは <em>filename</em>
    というオブジェクトファイルおよびライブラリをリンクし、<em>module</em>
    という名前のモジュールの構造をアクティブなモジュールのリストに追加します。
    <em>Module</em> はファイル中の <code>module</code>
    型の外部変数の名前で、モジュールのドキュメントに
    <a href="module-dict.html#moduleidentifier">モジュール識別子</a>として書かれているものです。例 :</p>

    <div class="example"><p><code>
      LoadModule status_module modules/mod_status.so
    </code></p></div>

    <p>これは ServerRoot の modules サブディレクトリから指定された名前の
    モジュールをロードします。</p>

</div>
</div>
<div id="footer">
<p class="apache">Maintained by the <a href="http://httpd.apache.org/docs-project/">Apache HTTP Server Documentation Project</a></p>
<p class="menu"><a href="../mod/">モジュール</a> | <a href="../mod/directives.html">ディレクティブ</a> | <a href="../faq/">FAQ</a> | <a href="../glossary.html">用語</a> | <a href="../sitemap.html">サイトマップ</a></p></div>
</body></html>